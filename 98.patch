diff --git a/bsp/stm32/stm32f429-faraday/project.uvoptx b/bsp/stm32/stm32f429-faraday/project.uvoptx
index 38468c9..df6bc24 100644
--- a/bsp/stm32/stm32f429-faraday/project.uvoptx
+++ b/bsp/stm32/stm32f429-faraday/project.uvoptx
@@ -364,7 +364,7 @@
 
   <Group>
     <GroupName>Applications</GroupName>
-    <tvExp>1</tvExp>
+    <tvExp>0</tvExp>
     <tvExpOptDlg>0</tvExpOptDlg>
     <cbSel>0</cbSel>
     <RteFlg>0</RteFlg>
@@ -372,7 +372,7 @@
       <GroupNumber>2</GroupNumber>
       <FileNumber>15</FileNumber>
       <FileType>1</FileType>
-      <tvExp>0</tvExp>
+      <tvExp>1</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
       <bDave2>0</bDave2>
       <PathWithFileName>applications\main.c</PathWithFileName>
@@ -384,7 +384,7 @@
 
   <Group>
     <GroupName>Drivers</GroupName>
-    <tvExp>1</tvExp>
+    <tvExp>0</tvExp>
     <tvExpOptDlg>0</tvExpOptDlg>
     <cbSel>0</cbSel>
     <RteFlg>0</RteFlg>
@@ -3904,6 +3904,18 @@
       <RteFlg>0</RteFlg>
       <bShared>0</bShared>
     </File>
+    <File>
+      <GroupNumber>21</GroupNumber>
+      <FileNumber>297</FileNumber>
+      <FileType>1</FileType>
+      <tvExp>0</tvExp>
+      <tvExpOptDlg>0</tvExpOptDlg>
+      <bDave2>0</bDave2>
+      <PathWithFileName>..\..\..\components\utilities\ui\font_symbol_25.c</PathWithFileName>
+      <FilenameWithoutPath>font_symbol_25.c</FilenameWithoutPath>
+      <RteFlg>0</RteFlg>
+      <bShared>0</bShared>
+    </File>
   </Group>
 
   <Group>
@@ -3914,7 +3926,7 @@
     <RteFlg>0</RteFlg>
     <File>
       <GroupNumber>22</GroupNumber>
-      <FileNumber>297</FileNumber>
+      <FileNumber>298</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -3934,7 +3946,7 @@
     <RteFlg>0</RteFlg>
     <File>
       <GroupNumber>23</GroupNumber>
-      <FileNumber>298</FileNumber>
+      <FileNumber>299</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -3954,7 +3966,7 @@
     <RteFlg>0</RteFlg>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>299</FileNumber>
+      <FileNumber>300</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -3966,7 +3978,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>300</FileNumber>
+      <FileNumber>301</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -3978,7 +3990,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>301</FileNumber>
+      <FileNumber>302</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -3990,7 +4002,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>302</FileNumber>
+      <FileNumber>303</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4002,7 +4014,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>303</FileNumber>
+      <FileNumber>304</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4014,7 +4026,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>304</FileNumber>
+      <FileNumber>305</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4026,7 +4038,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>305</FileNumber>
+      <FileNumber>306</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4038,7 +4050,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>306</FileNumber>
+      <FileNumber>307</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4050,7 +4062,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>307</FileNumber>
+      <FileNumber>308</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4062,7 +4074,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>308</FileNumber>
+      <FileNumber>309</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4074,7 +4086,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>309</FileNumber>
+      <FileNumber>310</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4086,7 +4098,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>310</FileNumber>
+      <FileNumber>311</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4098,7 +4110,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>311</FileNumber>
+      <FileNumber>312</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4110,7 +4122,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>312</FileNumber>
+      <FileNumber>313</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4122,7 +4134,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>313</FileNumber>
+      <FileNumber>314</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4134,7 +4146,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>314</FileNumber>
+      <FileNumber>315</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4146,7 +4158,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>315</FileNumber>
+      <FileNumber>316</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4158,7 +4170,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>316</FileNumber>
+      <FileNumber>317</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4170,7 +4182,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>317</FileNumber>
+      <FileNumber>318</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4182,7 +4194,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>318</FileNumber>
+      <FileNumber>319</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4194,7 +4206,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>319</FileNumber>
+      <FileNumber>320</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4206,7 +4218,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>320</FileNumber>
+      <FileNumber>321</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4218,7 +4230,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>321</FileNumber>
+      <FileNumber>322</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4230,7 +4242,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>322</FileNumber>
+      <FileNumber>323</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4242,7 +4254,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>323</FileNumber>
+      <FileNumber>324</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4254,7 +4266,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>324</FileNumber>
+      <FileNumber>325</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4266,7 +4278,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>325</FileNumber>
+      <FileNumber>326</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4278,7 +4290,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>326</FileNumber>
+      <FileNumber>327</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4290,7 +4302,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>327</FileNumber>
+      <FileNumber>328</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4302,7 +4314,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>328</FileNumber>
+      <FileNumber>329</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4314,7 +4326,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>329</FileNumber>
+      <FileNumber>330</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4326,7 +4338,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>330</FileNumber>
+      <FileNumber>331</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4338,7 +4350,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>331</FileNumber>
+      <FileNumber>332</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4350,7 +4362,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>332</FileNumber>
+      <FileNumber>333</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4362,7 +4374,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>333</FileNumber>
+      <FileNumber>334</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4374,7 +4386,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>334</FileNumber>
+      <FileNumber>335</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
@@ -4386,7 +4398,7 @@
     </File>
     <File>
       <GroupNumber>24</GroupNumber>
-      <FileNumber>335</FileNumber>
+      <FileNumber>336</FileNumber>
       <FileType>1</FileType>
       <tvExp>0</tvExp>
       <tvExpOptDlg>0</tvExpOptDlg>
diff --git a/bsp/stm32/stm32f429-faraday/project.uvprojx b/bsp/stm32/stm32f429-faraday/project.uvprojx
index 270d55d..044da99 100644
--- a/bsp/stm32/stm32f429-faraday/project.uvprojx
+++ b/bsp/stm32/stm32f429-faraday/project.uvprojx
@@ -2101,6 +2101,11 @@
               <FileType>1</FileType>
               <FilePath>..\..\..\components\utilities\ui\ui_utils.c</FilePath>
             </File>
+            <File>
+              <FileName>font_symbol_25.c</FileName>
+              <FileType>1</FileType>
+              <FilePath>..\..\..\components\utilities\ui\font_symbol_25.c</FilePath>
+            </File>
           </Files>
         </Group>
         <Group>
diff --git a/bsp/stm32/stm32f429-faraday/rtconfig.h b/bsp/stm32/stm32f429-faraday/rtconfig.h
index 33544ba..9b4c4ec 100644
--- a/bsp/stm32/stm32f429-faraday/rtconfig.h
+++ b/bsp/stm32/stm32f429-faraday/rtconfig.h
@@ -150,6 +150,7 @@
 #define RT_USING_UTILS_LIST
 #define RT_USING_INPUT_DEV
 #define RT_USING_USER_UI
+#define USING_SECOND_TEMPER
 #define RT_USING_USER_TRANSPORT
 
 /* RT-Thread online packages */
diff --git a/components/utilities/mod_trans/mod_trans.h b/components/utilities/mod_trans/mod_trans.h
index 15567d6..2d8b1fe 100644
--- a/components/utilities/mod_trans/mod_trans.h
+++ b/components/utilities/mod_trans/mod_trans.h
@@ -28,14 +28,23 @@
 
 
 //LD
-#define LD_UART_NAME 		"uart6"
 
-#define LOCK_STATE_ADDR 	5
-#define MODBUS_LD_CFG_ADDR	16 	 //LD采样起始寄存器地址
-#define ITEM_ADDR_HEAD		MODBUS_LD_CFG_ADDR + 2
+
+#if defined(USING_SECOND_TEMPER)
+#define MODBUS_LD_CFG_ADDR	18 	 //LD配置起始寄存器地址
+#define MAX_SAMPLE_NUM 		9
+#define MAX_CONFIG_NUM		18	 //switch + 17 spinbox
+#else
+#define MODBUS_LD_CFG_ADDR	16 	 //LD配置起始寄存器地址
 #define MAX_SAMPLE_NUM 		8
 #define MAX_CONFIG_NUM		16	 //switch + 15 spinbox
 
+#endif
+#define LOCK_STATE_ADDR 	5
+#define LD_UART_NAME 		"uart6"
+#define ITEM_ADDR_HEAD		MODBUS_LD_CFG_ADDR + 2
+
+
 //TA
 #define TA_UART_NAME 				"uart2"
 #define MODBUS_TA_CFG_ADDR			1	 //ta配置起始寄存器地址
diff --git a/components/utilities/ui/font_ch_16.c b/components/utilities/ui/font_ch_16.c
index de482ba..f5a0df3 100644
--- a/components/utilities/ui/font_ch_16.c
+++ b/components/utilities/ui/font_ch_16.c
@@ -1,12 +1,14 @@
 /*******************************************************************************
  * Size: 16 px
  * Bpp: 2
- * Opts: 
+ * Opts: --bpp 2 --size 16 --no-compress --font song_bold.ttf --symbols 键秒机模式调试一二三上下限作位保值偏置先光入开关分别制功动压参发否启告
+器失存定尖峰工幅度录成户打扫描拉数是样法拉第泡流温源激点率用电登相积级
+者自解除警设识误请调败输采铯锁错闭频勿中切换最大小℃ --range 32-126 --format lvgl -o font_ch_16.c
  ******************************************************************************/
 
-
 #include "lvgl.h"
 
+
 #ifndef FONT_CH_16
 #define FONT_CH_16 1
 #endif
@@ -24,6 +26,37 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     /* U+0021 "!" */
     0x38, 0xe3, 0x8d, 0x34, 0x82, 0x0, 0x24, 0xd0,
 
+    /* U+0022 "\"" */
+    0xd3, 0x78, 0xd9, 0x32, 0x8, 0x0, 0x0,
+
+    /* U+0023 "#" */
+    0x1, 0x80, 0xc0, 0x24, 0x18, 0x3f, 0xff, 0xf0,
+    0x30, 0x30, 0x3, 0x3, 0x0, 0x60, 0x60, 0x3f,
+    0xff, 0xf0, 0xc0, 0x90, 0xc, 0xc, 0x1, 0x80,
+    0xc0,
+
+    /* U+0024 "$" */
+    0x2, 0x40, 0xb, 0xf0, 0x32, 0x54, 0x32, 0x40,
+    0x3f, 0x40, 0x1f, 0xe0, 0x3, 0xf8, 0x2, 0xac,
+    0x52, 0x4c, 0x72, 0x58, 0x2f, 0xe0, 0x2, 0x40,
+    0x2, 0x40,
+
+    /* U+0025 "%" */
+    0x0, 0x0, 0x0, 0x15, 0x0, 0xc3, 0xc, 0x9,
+    0xc, 0x30, 0x60, 0x30, 0xc3, 0x0, 0x93, 0x30,
+    0x0, 0x52, 0x40, 0x0, 0x18, 0x50, 0x0, 0xc9,
+    0x20, 0xc, 0x30, 0xc0, 0x90, 0xc3, 0x6, 0x2,
+    0x48, 0x20, 0x1, 0x40,
+
+    /* U+0026 "&" */
+    0x1, 0x50, 0x0, 0x9, 0x14, 0x0, 0xf, 0x18,
+    0x0, 0x7, 0xa0, 0x0, 0x7, 0xd0, 0x78, 0x28,
+    0xf4, 0x50, 0x70, 0x3c, 0x40, 0xb0, 0xf, 0x0,
+    0x78, 0xb, 0xd1, 0x1f, 0xd0, 0xbc,
+
+    /* U+0027 "'" */
+    0x31, 0xc3, 0x8, 0x0,
+
     /* U+0028 "(" */
     0x0, 0x0, 0x50, 0x60, 0x30, 0x28, 0xd, 0x3,
     0x0, 0xc0, 0x34, 0xd, 0x1, 0x80, 0x30, 0x2,
@@ -34,12 +67,30 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x70, 0x1c, 0x7, 0x2, 0x80, 0xd0, 0x60, 0x20,
     0x10, 0x0, 0x0,
 
+    /* U+002A "*" */
+    0x2, 0x1, 0x88, 0x80, 0xb8, 0x6, 0xe4, 0x12,
+    0x20, 0x8, 0x0,
+
+    /* U+002B "+" */
+    0x0, 0x40, 0x0, 0x30, 0x0, 0xc, 0x0, 0x3,
+    0x0, 0xff, 0xff, 0x80, 0x30, 0x0, 0xc, 0x0,
+    0x3, 0x0, 0x0, 0x40, 0x0,
+
+    /* U+002C "," */
+    0x78, 0x1c, 0x8, 0x10,
+
     /* U+002D "-" */
     0x7f, 0x40,
 
     /* U+002E "." */
     0x24, 0xd0,
 
+    /* U+002F "/" */
+    0x0, 0x4, 0x0, 0xc, 0x0, 0x24, 0x0, 0x30,
+    0x0, 0xa0, 0x0, 0xc0, 0x1, 0x80, 0x3, 0x0,
+    0x7, 0x0, 0x9, 0x0, 0xc, 0x0, 0x24, 0x0,
+    0x30, 0x0,
+
     /* U+0030 "0" */
     0x9, 0x90, 0x24, 0x30, 0x30, 0x28, 0x70, 0x2c,
     0xb0, 0x1c, 0xb0, 0x1c, 0x70, 0x2c, 0x30, 0x28,
@@ -60,7 +111,7 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x10, 0x30, 0x3d, 0x80,
 
     /* U+0034 "4" */
-    0x0, 0x30, 0x0, 0xf0, 0x2, 0xf0, 0x4, 0xb0,
+    0x0, 0x30, 0x0, 0xf0, 0x2, 0xb0, 0x4, 0xb0,
     0x14, 0xb0, 0x20, 0xb0, 0xbf, 0xfd, 0x0, 0xb0,
     0x0, 0xb0, 0x0, 0xb0,
 
@@ -89,11 +140,41 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x38, 0x24, 0xe0, 0x7, 0x0, 0x34, 0x2, 0x40,
     0x50, 0x0,
 
+    /* U+003A ":" */
+    0x38, 0xe0, 0x0, 0x34, 0xe0,
+
+    /* U+003B ";" */
+    0x38, 0x38, 0x0, 0x0, 0x0, 0x78, 0x1c, 0x8,
+    0x10,
+
+    /* U+003C "<" */
+    0x0, 0x0, 0x0, 0x2, 0xd0, 0x1a, 0x40, 0xb8,
+    0x0, 0xb4, 0x0, 0x2, 0xd0, 0x0, 0x7, 0x90,
+    0x0, 0x9, 0x0, 0x0, 0x0,
+
+    /* U+003D "=" */
+    0xbf, 0xff, 0x40, 0x0, 0x0, 0x0, 0x2, 0xff,
+    0xfd,
+
+    /* U+003E ">" */
+    0x0, 0x0, 0x2d, 0x0, 0x0, 0x78, 0x0, 0x1,
+    0xb4, 0x0, 0x7, 0x40, 0x2d, 0x1, 0xe4, 0x2,
+    0x40, 0x0, 0x0, 0x0, 0x0,
+
     /* U+003F "?" */
     0x0, 0x7, 0xe0, 0x15, 0x80, 0x4, 0x0, 0x50,
     0xc, 0x2f, 0x82, 0x80, 0x10, 0x2, 0x40, 0x38,
     0x0,
 
+    /* U+0040 "@" */
+    0x0, 0x15, 0x54, 0x0, 0x6, 0x0, 0x5, 0x0,
+    0x90, 0x0, 0x5, 0x6, 0x0, 0x96, 0x8, 0x30,
+    0x18, 0x3c, 0x20, 0xc0, 0xc0, 0xd0, 0x83, 0xe,
+    0x7, 0x2, 0xc, 0x34, 0x3c, 0x20, 0x30, 0xe5,
+    0xe1, 0x40, 0x91, 0x91, 0x90, 0x80, 0x80, 0x0,
+    0x5, 0x0, 0x80, 0x0, 0x40, 0x0, 0x55, 0x54,
+    0x0,
+
     /* U+0041 "A" */
     0x0, 0xc, 0x0, 0x0, 0x1e, 0x0, 0x0, 0x2f,
     0x0, 0x0, 0x17, 0x40, 0x0, 0x43, 0xc0, 0x0,
@@ -101,12 +182,43 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x2, 0x0, 0xb4, 0x1e, 0x41, 0xbd, 0x0, 0x0,
     0x0,
 
+    /* U+0042 "B" */
+    0x6f, 0x59, 0x0, 0xe0, 0x74, 0xe, 0x3, 0x80,
+    0xe0, 0xb0, 0xf, 0xae, 0x0, 0xe0, 0x3c, 0xe,
+    0x2, 0xd0, 0xe0, 0x1d, 0xe, 0x3, 0xc6, 0xf9,
+    0x90,
+
+    /* U+0043 "C" */
+    0x1, 0xaa, 0x80, 0xe0, 0x9, 0x2c, 0x0, 0x13,
+    0x80, 0x0, 0x78, 0x0, 0x7, 0x80, 0x0, 0x38,
+    0x0, 0x3, 0xc0, 0x1, 0xe, 0x0, 0x50, 0x1a,
+    0xac,
+
     /* U+0044 "D" */
     0x6f, 0x5b, 0x80, 0xe, 0x0, 0xb4, 0xe, 0x0,
     0x3c, 0xe, 0x0, 0x1e, 0xe, 0x0, 0x1e, 0xe,
     0x0, 0x1e, 0xe, 0x0, 0x1d, 0xe, 0x0, 0x3c,
     0xe, 0x0, 0xb4, 0x7f, 0xea, 0x80,
 
+    /* U+0045 "E" */
+    0x2f, 0xaa, 0xc0, 0x3c, 0x1, 0x0, 0xf0, 0x0,
+    0x3, 0xc0, 0x0, 0xf, 0x2, 0x0, 0x3d, 0x6c,
+    0x0, 0xf0, 0x10, 0x3, 0xc0, 0x0, 0xf, 0x0,
+    0x30, 0x7e, 0xab, 0xc0,
+
+    /* U+0046 "F" */
+    0x2f, 0xab, 0xc3, 0x80, 0x20, 0xe0, 0x4, 0x38,
+    0x0, 0xe, 0x2, 0x3, 0xea, 0x80, 0xe0, 0x10,
+    0x38, 0x0, 0xe, 0x0, 0xb, 0xd0, 0x0, 0x0,
+    0x0,
+
+    /* U+0047 "G" */
+    0x1, 0xaa, 0xa0, 0x2, 0xc0, 0xd, 0x2, 0xd0,
+    0x0, 0x40, 0xf0, 0x0, 0x0, 0x78, 0x0, 0x0,
+    0x1e, 0x0, 0x6a, 0x43, 0xc0, 0x3, 0x80, 0xf4,
+    0x0, 0xe0, 0xf, 0x0, 0x38, 0x0, 0x6a, 0xa8,
+    0x0,
+
     /* U+0048 "H" */
     0x0, 0x0, 0x0, 0x7, 0xd0, 0x2f, 0x40, 0xe0,
     0x3, 0x80, 0x38, 0x0, 0xe0, 0xe, 0x0, 0x38,
@@ -114,11 +226,69 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x0, 0xe0, 0xe, 0x0, 0x38, 0x3, 0x80, 0xe,
     0x2, 0xf4, 0x7, 0xd0, 0x0, 0x0, 0x0,
 
+    /* U+0049 "I" */
+    0x0, 0x1, 0xf4, 0xe, 0x0, 0xe0, 0xe, 0x0,
+    0xe0, 0xe, 0x0, 0xe0, 0xe, 0x0, 0xe0, 0x6f,
+    0x40, 0x0,
+
+    /* U+004A "J" */
+    0x0, 0x0, 0xb, 0xd0, 0xe, 0x0, 0x38, 0x0,
+    0xe0, 0x3, 0x80, 0xe, 0x0, 0x38, 0x0, 0xd0,
+    0x3, 0x40, 0xd, 0x0, 0x70, 0x2, 0x41, 0xf4,
+    0x0,
+
+    /* U+004B "K" */
+    0x0, 0x0, 0x0, 0x2f, 0x41, 0xf8, 0x1d, 0x1,
+    0x80, 0x1d, 0x5, 0x0, 0x1d, 0x14, 0x0, 0x1e,
+    0xa0, 0x0, 0x1e, 0xf4, 0x0, 0x1d, 0x3e, 0x0,
+    0x1d, 0xf, 0x80, 0x1d, 0x2, 0xf0, 0x2f, 0x41,
+    0xfd, 0x0, 0x0, 0x0,
+
+    /* U+004C "L" */
+    0x0, 0x0, 0x2, 0xf4, 0x0, 0xe, 0x0, 0x0,
+    0xe0, 0x0, 0xe, 0x0, 0x0, 0xe0, 0x0, 0xe,
+    0x0, 0x0, 0xe0, 0x0, 0xe, 0x0, 0x0, 0xe0,
+    0x8, 0x2f, 0xab, 0xc0,
+
+    /* U+004D "M" */
+    0x0, 0x0, 0x0, 0x0, 0x7c, 0x0, 0x2f, 0x80,
+    0xf8, 0x0, 0xf4, 0x2, 0xf0, 0x6, 0xd0, 0x9,
+    0xe0, 0x27, 0x40, 0x23, 0xc1, 0x5d, 0x0, 0x87,
+    0x48, 0x74, 0x2, 0xf, 0x51, 0xd0, 0x8, 0x1f,
+    0x7, 0x40, 0x20, 0x34, 0x1d, 0x6, 0xd0, 0x41,
+    0xfd, 0x0, 0x0, 0x0, 0x0,
+
+    /* U+004E "N" */
+    0x0, 0x0, 0x0, 0x6f, 0x0, 0x6d, 0xf, 0xc0,
+    0x8, 0xb, 0xe0, 0x8, 0x8, 0xf8, 0x8, 0x8,
+    0x3e, 0x8, 0x8, 0xf, 0x88, 0x8, 0x3, 0xd8,
+    0x8, 0x0, 0xf8, 0x8, 0x0, 0x3c, 0x6d, 0x0,
+    0x8,
+
+    /* U+004F "O" */
+    0x1, 0xa6, 0x80, 0xf, 0x0, 0x74, 0x2c, 0x0,
+    0x3c, 0x3c, 0x0, 0x1e, 0x78, 0x0, 0xe, 0x78,
+    0x0, 0xe, 0x38, 0x0, 0x1e, 0x2c, 0x0, 0x2c,
+    0xf, 0x0, 0x34, 0x1, 0xa6, 0x80,
+
     /* U+0050 "P" */
     0x7f, 0xad, 0x3, 0x81, 0xd0, 0xe0, 0x3c, 0x38,
     0xf, 0xe, 0x7, 0x43, 0x8a, 0x0, 0xe0, 0x0,
     0x38, 0x0, 0xe, 0x0, 0xb, 0xd0, 0x0,
 
+    /* U+0051 "Q" */
+    0x1, 0xaa, 0x40, 0xb, 0x0, 0xf0, 0x2c, 0x0,
+    0x38, 0x3c, 0x0, 0x3c, 0x78, 0x0, 0x2d, 0x78,
+    0x0, 0x2d, 0x3c, 0x0, 0x2c, 0x3c, 0x0, 0x38,
+    0xe, 0x0, 0xb0, 0x2, 0x96, 0x80, 0x0, 0x1f,
+    0x0, 0x0, 0x3, 0xd0, 0x0, 0x0, 0x69,
+
+    /* U+0052 "R" */
+    0x7f, 0xb9, 0x0, 0x38, 0x3c, 0x0, 0xe0, 0x74,
+    0x3, 0x81, 0xd0, 0xe, 0xf, 0x0, 0x3e, 0xf0,
+    0x0, 0xe3, 0xc0, 0x3, 0x83, 0xc0, 0xe, 0xb,
+    0x80, 0xbd, 0xf, 0x90,
+
     /* U+0053 "S" */
     0xa, 0xa0, 0x30, 0x20, 0x70, 0x0, 0x3d, 0x0,
     0x1f, 0xd0, 0x2, 0xf8, 0x0, 0x3c, 0x40, 0x1c,
@@ -130,6 +300,13 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0xb0, 0x0, 0xb, 0x0, 0x0, 0xf0, 0x0, 0x6f,
     0x90, 0x0, 0x0, 0x0,
 
+    /* U+0055 "U" */
+    0x0, 0x0, 0x0, 0x2f, 0x40, 0xb4, 0x1d, 0x0,
+    0x20, 0x1d, 0x0, 0x20, 0x1d, 0x0, 0x20, 0x1d,
+    0x0, 0x20, 0x1d, 0x0, 0x20, 0xd, 0x0, 0x20,
+    0xe, 0x0, 0x20, 0xf, 0x0, 0x80, 0x1, 0xea,
+    0x40,
+
     /* U+0056 "V" */
     0x0, 0x0, 0x0, 0x7f, 0x41, 0xb4, 0x1e, 0x0,
     0x50, 0xf, 0x0, 0x80, 0x7, 0x80, 0x40, 0x3,
@@ -137,22 +314,194 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x0, 0xb8, 0x0, 0x0, 0x74, 0x0, 0x0, 0x30,
     0x0,
 
+    /* U+0057 "W" */
+    0x0, 0x0, 0x0, 0x0, 0x2e, 0x1f, 0x1d, 0x28,
+    0xf, 0xb, 0x4, 0x10, 0x7, 0x43, 0x50, 0x10,
+    0x3, 0x83, 0xd0, 0x10, 0x2, 0xc1, 0xd0, 0x40,
+    0x0, 0xe0, 0xf0, 0x80, 0x0, 0xb1, 0x75, 0x0,
+    0x0, 0x75, 0x3a, 0x0, 0x0, 0x3c, 0x1d, 0x0,
+    0x0, 0x14, 0xc, 0x0,
+
+    /* U+0058 "X" */
+    0x0, 0x0, 0x0, 0x7f, 0x42, 0xe4, 0xf, 0x0,
+    0x80, 0x7, 0xc2, 0x0, 0x2, 0xd4, 0x0, 0x0,
+    0xf4, 0x0, 0x0, 0x7c, 0x0, 0x0, 0x9f, 0x0,
+    0x2, 0xb, 0x80, 0x9, 0x3, 0xd0, 0x6e, 0x46,
+    0xf8, 0x0, 0x0, 0x0,
+
+    /* U+0059 "Y" */
+    0x0, 0x0, 0x1, 0xfc, 0x2, 0xd0, 0xf0, 0x8,
+    0x2, 0xd0, 0x50, 0x3, 0xc2, 0x0, 0x7, 0xa0,
+    0x0, 0xb, 0x40, 0x0, 0x1d, 0x0, 0x0, 0x74,
+    0x0, 0x1, 0xd0, 0x0, 0x1f, 0xd0, 0x0,
+
     /* U+005A "Z" */
     0x29, 0x5b, 0xc1, 0x0, 0xb4, 0x0, 0x1e, 0x0,
     0x3, 0xc0, 0x0, 0xf4, 0x0, 0x1e, 0x0, 0x3,
     0xc0, 0x0, 0xf4, 0x1, 0x2e, 0x0, 0x23, 0xea,
     0xae,
 
+    /* U+005B "[" */
+    0xf5, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0,
+    0xe0, 0xe0, 0xe0, 0xe0, 0xf5,
+
+    /* U+005C "\\" */
+    0x30, 0x0, 0x24, 0x0, 0xc, 0x0, 0xd, 0x0,
+    0x6, 0x0, 0x3, 0x0, 0x2, 0x80, 0x0, 0xc0,
+    0x0, 0x90, 0x0, 0x30, 0x0, 0x30, 0x0, 0x18,
+    0x0, 0xc,
+
+    /* U+005D "]" */
+    0x1b, 0x0, 0xc0, 0x30, 0xc, 0x3, 0x0, 0xc0,
+    0x30, 0xc, 0x3, 0x0, 0xc0, 0x30, 0x1c, 0x1b,
+    0x0,
+
+    /* U+005E "^" */
+    0x0, 0x0, 0x3, 0xc0, 0xb, 0xe0, 0x2c, 0x38,
+    0x20, 0x8,
+
+    /* U+005F "_" */
+    0x3f, 0xff, 0xc0, 0x0, 0x0,
+
+    /* U+0060 "`" */
+    0xa0, 0x38, 0x4,
+
+    /* U+0061 "a" */
+    0x0, 0x0, 0xa, 0xe8, 0x34, 0x38, 0x70, 0x38,
+    0x70, 0x38, 0x34, 0x78, 0x1f, 0x6d,
+
+    /* U+0062 "b" */
+    0x6c, 0x0, 0x3c, 0x0, 0x2c, 0x0, 0x2c, 0x0,
+    0x2e, 0xb8, 0x2c, 0x1d, 0x2c, 0xe, 0x2c, 0xe,
+    0x2c, 0xd, 0x2f, 0xb4,
+
+    /* U+0063 "c" */
+    0xa, 0xe0, 0xd0, 0x47, 0x0, 0x1c, 0x0, 0x38,
+    0x10, 0x7f, 0x40,
+
+    /* U+0064 "d" */
+    0x0, 0x7c, 0x0, 0x2c, 0x0, 0x2c, 0x0, 0x2c,
+    0xa, 0xbc, 0x34, 0x3c, 0x70, 0x2c, 0x70, 0x2c,
+    0x38, 0x2c, 0x1f, 0xad, 0x0, 0x0,
+
+    /* U+0065 "e" */
+    0x9, 0x90, 0xe6, 0x87, 0x0, 0x1d, 0x0, 0x3c,
+    0x10, 0x7f, 0x40,
+
+    /* U+0066 "f" */
+    0x2, 0xf4, 0x30, 0x40, 0xc0, 0x7, 0x0, 0x3e,
+    0x80, 0x70, 0x1, 0xc0, 0x7, 0x0, 0x1c, 0x0,
+    0xb9, 0x0, 0x0, 0x0,
+
+    /* U+0067 "g" */
+    0x0, 0x0, 0x2b, 0xe3, 0x43, 0x9c, 0xe, 0x70,
+    0x38, 0xd1, 0xe1, 0xf7, 0x80, 0xd, 0x30, 0x30,
+    0xba, 0x0,
+
+    /* U+0068 "h" */
+    0x7c, 0x0, 0xb, 0x0, 0x2, 0xc0, 0x0, 0xb0,
+    0x0, 0x2d, 0xf8, 0xb, 0x47, 0x2, 0xc0, 0xc0,
+    0xb0, 0x34, 0x2c, 0xd, 0xf, 0x4b, 0x80, 0x0,
+    0x0,
+
+    /* U+0069 "i" */
+    0x1c, 0x2, 0x0, 0x0, 0x0, 0xc, 0xf, 0x1,
+    0xc0, 0x70, 0x1c, 0xf, 0x40, 0x0,
+
+    /* U+006A "j" */
+    0xe, 0x5, 0x0, 0x0, 0x6, 0x1e, 0xe, 0xe,
+    0xe, 0xe, 0xe, 0xd, 0x18, 0x10,
+
+    /* U+006B "k" */
+    0x6c, 0x0, 0xb, 0x0, 0x2, 0xc0, 0x0, 0xb0,
+    0x0, 0x2c, 0x78, 0xb, 0x10, 0x2, 0xfc, 0x0,
+    0xb3, 0x80, 0x2c, 0x74, 0x1f, 0x4f, 0x80, 0x0,
+    0x0,
+
+    /* U+006C "l" */
+    0x2c, 0xb, 0x2, 0xc0, 0xb0, 0x2c, 0xb, 0x2,
+    0xc0, 0xb0, 0x2c, 0x1f, 0x40,
+
     /* U+006D "m" */
     0x4, 0x0, 0x0, 0xb, 0x7d, 0x7e, 0x3, 0xd2,
     0xd1, 0xc0, 0xb0, 0x70, 0x34, 0x2c, 0x1c, 0xd,
     0xb, 0x7, 0x3, 0x43, 0xd3, 0xd2, 0xe0, 0x0,
     0x0, 0x0,
 
+    /* U+006E "n" */
+    0x4, 0x0, 0x7, 0x7e, 0x3, 0xd2, 0xc0, 0xb0,
+    0x70, 0x2c, 0x1c, 0xb, 0x7, 0x7, 0xd2, 0xe0,
+    0x0, 0x0,
+
+    /* U+006F "o" */
+    0xa, 0xa0, 0x34, 0x2c, 0x70, 0x1d, 0x70, 0x1d,
+    0x34, 0x2c, 0x9, 0xa0,
+
+    /* U+0070 "p" */
+    0x4, 0x0, 0x3d, 0xb8, 0x2c, 0x1e, 0x2c, 0xf,
+    0x2c, 0xf, 0x2c, 0xd, 0x2e, 0xa4, 0x2c, 0x0,
+    0x2c, 0x0, 0x7e, 0x0, 0x0, 0x0,
+
+    /* U+0071 "q" */
+    0x0, 0x0, 0x2, 0xab, 0x3, 0x42, 0xc1, 0xc0,
+    0xb0, 0x70, 0x2c, 0xe, 0xb, 0x1, 0xfa, 0xc0,
+    0x0, 0x70, 0x0, 0x1c, 0x0, 0x1f, 0x40, 0x0,
+    0x0,
+
+    /* U+0072 "r" */
+    0x0, 0x1, 0xdd, 0x3d, 0x92, 0xc0, 0x2c, 0x2,
+    0xc0, 0x3d, 0x0, 0x0,
+
+    /* U+0073 "s" */
+    0x2a, 0x87, 0x4, 0x3e, 0x0, 0x7c, 0x40, 0xc3,
+    0xa4,
+
+    /* U+0074 "t" */
+    0x0, 0x0, 0xc0, 0x3e, 0x82, 0xc0, 0x2c, 0x2,
+    0xc0, 0x1c, 0x0, 0xf8,
+
     /* U+0075 "u" */
     0x7c, 0x7c, 0xb, 0xb, 0x2, 0xc2, 0xc0, 0xb0,
     0xb0, 0x2c, 0x2c, 0x3, 0xeb, 0x80,
 
+    /* U+0076 "v" */
+    0x0, 0x0, 0x7, 0xd2, 0x80, 0xb0, 0x40, 0xe,
+    0x10, 0x2, 0xd0, 0x0, 0x38, 0x0, 0x8, 0x0,
+
+    /* U+0077 "w" */
+    0x0, 0x0, 0x0, 0x2e, 0x2d, 0x1d, 0xf, 0xd,
+    0x4, 0x7, 0x4f, 0x10, 0x3, 0xd7, 0x50, 0x1,
+    0xe3, 0xc0, 0x0, 0xc1, 0x80,
+
+    /* U+0078 "x" */
+    0x0, 0x0, 0x7c, 0x74, 0x1d, 0x40, 0xb, 0x40,
+    0x7, 0xc0, 0x4, 0xf0, 0x74, 0xb8, 0x0, 0x0,
+
+    /* U+0079 "y" */
+    0x0, 0x0, 0xb, 0x82, 0x80, 0xf0, 0x80, 0x1d,
+    0x10, 0x3, 0x90, 0x0, 0xb4, 0x0, 0xc, 0x0,
+    0x2, 0x0, 0x0, 0x40, 0x3, 0x80, 0x0,
+
+    /* U+007A "z" */
+    0x0, 0x0, 0x97, 0xc0, 0x2c, 0x1, 0xd0, 0xe,
+    0x0, 0xf0, 0x4b, 0xeb, 0x0,
+
+    /* U+007B "{" */
+    0x0, 0x40, 0x70, 0xb, 0x0, 0xf0, 0xb, 0x0,
+    0xb0, 0x18, 0x2, 0x80, 0xa, 0x0, 0xb0, 0xf,
+    0x0, 0xf0, 0x7, 0x0, 0x18, 0x0, 0x0,
+
+    /* U+007C "|" */
+    0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x90,
+
+    /* U+007D "}" */
+    0x10, 0x0, 0xc0, 0xe, 0x0, 0xe0, 0xe, 0x0,
+    0xd0, 0x2, 0x0, 0x28, 0xe, 0x0, 0xd0, 0xe,
+    0x0, 0xe0, 0xd, 0x2, 0x40, 0x0, 0x0,
+
+    /* U+007E "~" */
+    0x3e, 0x41, 0x60, 0x6f, 0xc0, 0x0, 0x0,
+
     /* U+2103 "℃" */
     0x29, 0x0, 0x0, 0x4, 0x20, 0x2a, 0x50, 0x25,
     0x1d, 0xb, 0x40, 0x3, 0x40, 0x28, 0x0, 0xb0,
@@ -165,6 +514,43 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38,
     0x2a, 0xaa, 0xaa, 0xa8,
 
+    /* U+4E09 "三" */
+    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0,
+    0xa, 0xaa, 0xaa, 0xa4, 0x0, 0x0, 0x0, 0x0,
+    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
+    0x0, 0x0, 0x3, 0x80, 0x2, 0xaa, 0xaa, 0x90,
+    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
+    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x24,
+    0x2a, 0xaa, 0xaa, 0xbd, 0x0, 0x0, 0x0, 0x0,
+
+    /* U+4E0A "上" */
+    0x0, 0x2, 0x80, 0x0, 0x0, 0x3, 0xc0, 0x0,
+    0x0, 0x3, 0x80, 0x0, 0x0, 0x3, 0x80, 0x0,
+    0x0, 0x3, 0x80, 0x50, 0x0, 0x3, 0xea, 0xf4,
+    0x0, 0x3, 0x80, 0x0, 0x0, 0x3, 0x80, 0x0,
+    0x0, 0x3, 0x80, 0x0, 0x0, 0x3, 0x80, 0x0,
+    0x0, 0x3, 0x80, 0x0, 0x0, 0x3, 0x80, 0x0,
+    0x0, 0x3, 0x80, 0x38, 0x2a, 0xaa, 0xaa, 0xa8,
+
+    /* U+4E0B "下" */
+    0x0, 0x0, 0x0, 0x34, 0x25, 0x56, 0x95, 0xbc,
+    0x0, 0x3, 0x40, 0x0, 0x0, 0x3, 0x40, 0x0,
+    0x0, 0x3, 0x40, 0x0, 0x0, 0x3, 0xa4, 0x0,
+    0x0, 0x3, 0x4f, 0x40, 0x0, 0x3, 0x43, 0xc0,
+    0x0, 0x3, 0x40, 0xc0, 0x0, 0x3, 0x40, 0x0,
+    0x0, 0x3, 0x40, 0x0, 0x0, 0x3, 0x40, 0x0,
+    0x0, 0x3, 0x40, 0x0, 0x0, 0x3, 0x40, 0x0,
+
+    /* U+4E2D "中" */
+    0x0, 0x0, 0x0, 0x0, 0x0, 0x3c, 0x0, 0x0,
+    0x0, 0xe0, 0x0, 0x10, 0x3, 0x80, 0x20, 0xb5,
+    0x5f, 0x56, 0xf2, 0xc0, 0x38, 0x3, 0x4b, 0x0,
+    0xe0, 0xd, 0x2c, 0x3, 0x80, 0x34, 0xb0, 0xe,
+    0x0, 0xd2, 0xd5, 0x7d, 0x5b, 0x45, 0x0, 0xe0,
+    0x4, 0x0, 0x3, 0x80, 0x0, 0x0, 0xe, 0x0,
+    0x0, 0x0, 0x38, 0x0, 0x0, 0x0, 0xd0, 0x0,
+    0x0,
+
     /* U+4E8C "二" */
     0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0xc0,
     0x6, 0xaa, 0xaa, 0x90, 0x0, 0x0, 0x0, 0x0,
@@ -234,7 +620,7 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0xa, 0x40, 0x2f, 0xf8, 0x0, 0x0, 0x0, 0x0,
 
     /* U+5149 "光" */
-    0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0xc0, 0x0,
+    0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xc0, 0x0,
     0x1, 0x2, 0x81, 0xd0, 0x2, 0x82, 0x83, 0xc0,
     0x0, 0xe2, 0x83, 0x0, 0x0, 0x72, 0x88, 0x0,
     0x0, 0x12, 0x84, 0x74, 0xa, 0xbe, 0xba, 0xa4,
@@ -274,6 +660,16 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x2, 0x0, 0xfc, 0x0, 0x14, 0x0, 0x70, 0x0,
     0x0, 0x0, 0x0, 0x0,
 
+    /* U+5207 "切" */
+    0x3, 0x80, 0x0, 0x0, 0x3, 0x80, 0x0, 0x34,
+    0x3, 0x45, 0xb9, 0xb8, 0x3, 0x44, 0x34, 0x34,
+    0x3, 0x4f, 0x34, 0x34, 0x7, 0xe4, 0x34, 0x34,
+    0x13, 0x40, 0x34, 0x34, 0x3, 0x40, 0x70, 0x34,
+    0x3, 0x41, 0x70, 0x34, 0x3, 0x59, 0xb0, 0x34,
+    0x3, 0xf0, 0xe0, 0x70, 0x7, 0x82, 0xc0, 0x70,
+    0x2, 0x7, 0x0, 0xb0, 0x0, 0x28, 0xb, 0xf0,
+    0x0, 0x90, 0x3, 0x80, 0x0, 0x0, 0x0, 0x0,
+
     /* U+522B "别" */
     0x0, 0x0, 0x0, 0x0, 0x20, 0x18, 0x1, 0xd0,
     0xe5, 0xb0, 0x7, 0x3, 0x41, 0xc7, 0x1c, 0xd,
@@ -314,6 +710,16 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x0, 0x2, 0x47, 0xf0, 0x0, 0x5, 0x1, 0x80,
     0x0, 0x0, 0x0, 0x0,
 
+    /* U+52FF "勿" */
+    0x0, 0x0, 0x0, 0x0, 0x0, 0xb4, 0x0, 0x0,
+    0x3, 0xc0, 0x0, 0x0, 0x1c, 0x0, 0x4, 0x0,
+    0xfa, 0xaa, 0xf4, 0xa, 0x1c, 0x71, 0xc0, 0x30,
+    0xa2, 0x8b, 0x2, 0x3, 0x4e, 0x2c, 0x20, 0x1c,
+    0x34, 0xb0, 0x0, 0xd1, 0xc2, 0x80, 0xa, 0xe,
+    0xe, 0x0, 0xa0, 0xb0, 0x38, 0x9, 0x7, 0x40,
+    0xe0, 0x40, 0xb4, 0x7, 0x40, 0xa, 0x2, 0xfc,
+    0x1, 0x40, 0x2, 0xc0,
+
     /* U+538B "压" */
     0x5, 0x0, 0x0, 0x30, 0x7, 0xaa, 0xaa, 0xb8,
     0x7, 0x0, 0xe0, 0x0, 0x7, 0x0, 0xd0, 0x0,
@@ -373,6 +779,17 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x1, 0xc0, 0x3, 0x40, 0x1, 0xea, 0xab, 0x40,
     0x1, 0xc0, 0x3, 0x40, 0x1, 0x80, 0x0, 0x0,
 
+    /* U+5668 "器" */
+    0x0, 0x0, 0x0, 0x0, 0x0, 0xa6, 0xca, 0x5d,
+    0x0, 0x34, 0x72, 0x83, 0x40, 0xd, 0x1c, 0xa0,
+    0xd0, 0x3, 0x9b, 0x29, 0x74, 0x0, 0x40, 0xb2,
+    0x44, 0x0, 0x0, 0x38, 0x34, 0xc0, 0x15, 0x7d,
+    0xa5, 0x54, 0x0, 0x2c, 0x9, 0x0, 0x0, 0x38,
+    0x0, 0x79, 0x0, 0xbd, 0xb7, 0x9b, 0xe0, 0x4a,
+    0xc, 0xd1, 0xc0, 0x2, 0x83, 0x34, 0x70, 0x0,
+    0xb6, 0xce, 0x6c, 0x0, 0x28, 0x33, 0x47, 0x0,
+    0x0, 0x0, 0x0, 0x0,
+
     /* U+5927 "大" */
     0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x80, 0x0,
     0x0, 0x3, 0x40, 0x0, 0x0, 0x3, 0x40, 0x0,
@@ -482,6 +899,16 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x2, 0xc0, 0xd, 0x0, 0x6, 0x0, 0xd, 0x0,
     0x14, 0x0, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0,
 
+    /* U+5F0F "式" */
+    0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0xe9, 0x0,
+    0x0, 0x0, 0xe3, 0x80, 0x0, 0x0, 0xe1, 0xa0,
+    0x2a, 0xaa, 0xfa, 0xbc, 0x0, 0x0, 0xa0, 0x0,
+    0x0, 0x0, 0xa0, 0x0, 0x0, 0x9, 0x70, 0x0,
+    0x1a, 0xf9, 0x70, 0x0, 0x0, 0xe0, 0x34, 0x0,
+    0x0, 0xe0, 0x28, 0x0, 0x0, 0xe1, 0x4d, 0x4,
+    0x1, 0xf9, 0x7, 0x48, 0x3f, 0x40, 0x1, 0xf8,
+    0x14, 0x0, 0x0, 0x2c,
+
     /* U+5F55 "录" */
     0x6, 0xaa, 0xab, 0x0, 0x0, 0x0, 0x7, 0x0,
     0x0, 0x0, 0x7, 0x0, 0x1, 0xaa, 0xab, 0x0,
@@ -531,6 +958,26 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x1, 0xc0, 0x0, 0x38, 0xb, 0xc1, 0xaa, 0xb8,
     0x3, 0x40, 0x0, 0x34,
 
+    /* U+62C9 "拉" */
+    0x0, 0x0, 0x0, 0x0, 0x1, 0xc0, 0x34, 0x0,
+    0x1, 0xc0, 0x1d, 0x0, 0x1, 0xc0, 0xc, 0x20,
+    0x16, 0xfd, 0x55, 0xa8, 0x1, 0xc0, 0x0, 0x0,
+    0x1, 0xc1, 0x0, 0xd0, 0x1, 0xd9, 0x81, 0xd0,
+    0x7, 0xd0, 0xc1, 0xc0, 0x3e, 0xc0, 0xa2, 0x80,
+    0x1, 0xc0, 0xb2, 0x40, 0x1, 0xc0, 0xb3, 0x0,
+    0x1, 0xc0, 0x93, 0x0, 0x1, 0xc0, 0x1, 0x2c,
+    0x1b, 0xc9, 0x55, 0x55, 0x3, 0x40, 0x0, 0x0,
+
+    /* U+6362 "换" */
+    0x0, 0x0, 0x0, 0x0, 0x3, 0x40, 0x70, 0x0,
+    0x3, 0x0, 0xe0, 0x0, 0x3, 0x11, 0xdb, 0xc0,
+    0x1b, 0xbb, 0xa, 0x0, 0x3, 0xa, 0x8, 0x80,
+    0x3, 0x1b, 0x79, 0xf0, 0x3, 0xa7, 0x34, 0xd0,
+    0x2f, 0x47, 0x34, 0xd0, 0x77, 0x7, 0x30, 0xe8,
+    0x3, 0x55, 0xb9, 0x54, 0x3, 0x0, 0xa5, 0x0,
+    0x3, 0x1, 0xc3, 0x40, 0x1b, 0x7, 0x0, 0xf4,
+    0xe, 0x64, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0,
+
     /* U+63CF "描" */
     0x0, 0x0, 0x0, 0x0, 0x3, 0x80, 0xa3, 0x40,
     0x3, 0x40, 0x93, 0x0, 0x3, 0x51, 0xe7, 0xbc,
@@ -570,6 +1017,16 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x7, 0xe, 0x5b, 0x40, 0x7, 0xae, 0xf, 0x0,
     0x3e, 0xd, 0x25, 0xe4, 0x0, 0xd, 0x40, 0x24,
 
+    /* U+673A "机" */
+    0x0, 0x0, 0x0, 0x0, 0x1, 0xc0, 0x41, 0x0,
+    0x1, 0xc0, 0xfb, 0xc0, 0x1, 0xc4, 0xe3, 0x80,
+    0x2a, 0xee, 0xe3, 0x80, 0x3, 0xc0, 0xe3, 0x80,
+    0x3, 0xc0, 0xd3, 0x80, 0x7, 0xe8, 0xd3, 0x80,
+    0xf, 0xcd, 0xd3, 0x80, 0xd, 0xc4, 0xd3, 0x80,
+    0x21, 0xc0, 0xc3, 0x84, 0x51, 0xc2, 0x83, 0x84,
+    0x1, 0xc3, 0x3, 0x88, 0x1, 0xc8, 0x3, 0xee,
+    0x1, 0x90, 0x2, 0xfc,
+
     /* U+6837 "样" */
     0x0, 0x0, 0x0, 0x0, 0x1, 0xc0, 0xc0, 0xd0,
     0x1, 0xc0, 0x71, 0xc0, 0x1, 0xc4, 0x33, 0x10,
@@ -580,6 +1037,27 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x1, 0xc0, 0xd, 0x0, 0x1, 0xc0, 0xd, 0x0,
     0x1, 0xc0, 0xd, 0x0, 0x1, 0x80, 0xc, 0x0,
 
+    /* U+6A21 "模" */
+    0x0, 0x0, 0x0, 0x0, 0x3, 0x40, 0xd3, 0x40,
+    0x3, 0x40, 0xd3, 0x4c, 0x3, 0x55, 0xe7, 0x95,
+    0x17, 0xb4, 0xc3, 0x40, 0x7, 0x47, 0x55, 0xb0,
+    0xb, 0x87, 0x0, 0x70, 0xf, 0x77, 0x55, 0xb0,
+    0xf, 0x77, 0x0, 0x70, 0x27, 0x47, 0x79, 0xb0,
+    0x23, 0x41, 0x34, 0x14, 0x43, 0x65, 0xb9, 0x68,
+    0x3, 0x40, 0xb6, 0x0, 0x3, 0x40, 0xc2, 0xe4,
+    0x3, 0x47, 0x0, 0x74, 0x3, 0x14, 0x0, 0x0,
+    0x0, 0x0, 0x0, 0x0,
+
+    /* U+6CD5 "法" */
+    0x0, 0x0, 0x0, 0x0, 0x5, 0x0, 0x3c, 0x0,
+    0x3, 0x80, 0x38, 0x0, 0x1, 0xd0, 0x38, 0x10,
+    0x0, 0x66, 0xbe, 0xf4, 0x28, 0x20, 0x38, 0x0,
+    0xd, 0x80, 0x38, 0x0, 0x8, 0xc0, 0x38, 0x38,
+    0x1, 0x9a, 0xba, 0xa8, 0x3, 0x40, 0x78, 0x0,
+    0x2f, 0x0, 0xe1, 0x0, 0xb, 0x2, 0x81, 0x80,
+    0xb, 0x6, 0x0, 0xf0, 0xf, 0x2f, 0xf9, 0x74,
+    0xb, 0x1d, 0x0, 0x30, 0x0, 0x0, 0x0, 0x0,
+
     /* U+6CE1 "泡" */
     0x0, 0x0, 0x40, 0x0, 0x1, 0x0, 0xe0, 0x0,
     0x2, 0xc1, 0xc0, 0x10, 0x0, 0xd2, 0xea, 0xb4,
@@ -687,6 +1165,16 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x1, 0xc0, 0xe0, 0x38, 0x1, 0x80, 0xc0, 0x30,
     0x0, 0x0, 0x0, 0x0,
 
+    /* U+79D2 "秒" */
+    0x0, 0x0, 0x4, 0x0, 0x0, 0x7c, 0xb, 0x0,
+    0x1b, 0xe4, 0xa, 0x0, 0x1, 0xc0, 0xa, 0x0,
+    0x1, 0xc0, 0xea, 0x20, 0x2a, 0xed, 0xda, 0x2c,
+    0x3, 0xc0, 0xca, 0xd, 0x3, 0xe1, 0x8a, 0x9,
+    0xb, 0xde, 0xa, 0x10, 0xe, 0xca, 0xa, 0x74,
+    0x25, 0xc0, 0x4, 0xe0, 0x11, 0xc0, 0x3, 0xc0,
+    0x1, 0xc0, 0xe, 0x0, 0x1, 0xc0, 0xb4, 0x0,
+    0x1, 0x99, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
+
     /* U+79EF "积" */
     0x0, 0x0, 0x0, 0x0, 0x2, 0xf1, 0x1, 0x81,
     0xbd, 0x5e, 0xaf, 0x44, 0x70, 0x30, 0x2c, 0x1,
@@ -697,6 +1185,16 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x70, 0x7, 0xa, 0x0, 0xf0, 0x1c, 0x60, 0x1,
     0xc0, 0x61, 0x0, 0x0,
 
+    /* U+7B2C "第" */
+    0x1, 0x0, 0x4, 0x0, 0x3, 0xc0, 0x2c, 0x10,
+    0x7, 0x9f, 0x39, 0xbc, 0x9, 0xa0, 0x93, 0x0,
+    0xc, 0x30, 0x83, 0x0, 0x20, 0x11, 0x0, 0x40,
+    0x41, 0x57, 0x96, 0xc0, 0x1, 0x3, 0x81, 0xc0,
+    0x3, 0xab, 0xea, 0xc0, 0x7, 0x3, 0x80, 0x20,
+    0xf, 0x6f, 0x95, 0xb4, 0x0, 0x3b, 0x80, 0xb0,
+    0x0, 0xa3, 0x84, 0xe0, 0x3, 0x43, 0x87, 0xd0,
+    0x18, 0x3, 0x81, 0x0, 0x0, 0x3, 0x40, 0x0,
+
     /* U+7EA7 "级" */
     0x1, 0x80, 0x0, 0x0, 0x3, 0xc6, 0xaa, 0xf4,
     0x3, 0x0, 0xd0, 0xd0, 0xa, 0x10, 0xe1, 0xc0,
@@ -774,6 +1272,16 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x38, 0x2c, 0x20, 0x0, 0xa0, 0x21, 0x0, 0x0,
     0x0,
 
+    /* U+8BD5 "试" */
+    0x0, 0x0, 0x0, 0x0, 0x9, 0x0, 0xd, 0x40,
+    0x3, 0x80, 0xc, 0xb0, 0x1, 0xc0, 0xc, 0x20,
+    0x0, 0x15, 0x6e, 0x7c, 0x1, 0x0, 0xc, 0x0,
+    0x1b, 0x80, 0x1d, 0x0, 0x3, 0x1a, 0xbd, 0x0,
+    0x3, 0x3, 0x4a, 0x0, 0x3, 0x3, 0x4b, 0x0,
+    0x3, 0x3, 0x47, 0x0, 0x3, 0x63, 0x57, 0x84,
+    0x3, 0xd7, 0xd2, 0xc8, 0xb, 0x6d, 0x0, 0xfc,
+    0x2, 0x0, 0x0, 0x7c, 0x0, 0x0, 0x0, 0x1c,
+
     /* U+8BEF "误" */
     0x8, 0x5, 0x0, 0xd0, 0x7, 0x47, 0xaa, 0xe0,
     0x3, 0xc7, 0x0, 0xd0, 0x1, 0x7, 0x0, 0xd0,
@@ -866,6 +1374,16 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x3, 0xa3, 0x40, 0xe0, 0x7, 0x83, 0x95, 0xe0,
     0x2, 0x3, 0x40, 0xa0, 0x0, 0x0, 0x0, 0x0,
 
+    /* U+952E "键" */
+    0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x3, 0x0,
+    0x7, 0x1, 0x3, 0x10, 0xa, 0xab, 0x6b, 0x70,
+    0xd, 0x57, 0x3, 0x34, 0x1c, 0x49, 0x5b, 0x75,
+    0x2a, 0xdc, 0x7, 0x30, 0x27, 0xb, 0x87, 0x10,
+    0x47, 0x42, 0x47, 0x24, 0x1b, 0x97, 0x47, 0x0,
+    0x7, 0xb, 0x3, 0x18, 0x7, 0xa, 0x5b, 0x54,
+    0x7, 0x4a, 0x3, 0x0, 0x7, 0x19, 0xe6, 0x44,
+    0x9, 0x60, 0x1b, 0xf8, 0x0, 0x0, 0x0, 0x0,
+
     /* U+95ED "闭" */
     0x0, 0x0, 0x0, 0x0, 0x60, 0x0, 0x4, 0x2,
     0xc5, 0x56, 0xd2, 0x1c, 0x10, 0x1c, 0x34, 0x3,
@@ -875,6 +1393,16 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x34, 0x1c, 0x38, 0x1b, 0x41, 0xc3, 0x40, 0xb1,
     0xfc, 0x30, 0x0, 0x7, 0x40, 0x0, 0x0, 0x0,
 
+    /* U+9650 "限" */
+    0x0, 0x0, 0x0, 0x1, 0xd7, 0xa9, 0x5a, 0x7,
+    0xd, 0xd0, 0x1c, 0x1c, 0xa3, 0x40, 0x70, 0x73,
+    0xe, 0xaa, 0xc1, 0xc8, 0x34, 0x7, 0x7, 0x24,
+    0xd0, 0x1c, 0x1c, 0x33, 0xa5, 0xb0, 0x70, 0xdd,
+    0x10, 0x41, 0xc3, 0x74, 0x83, 0x87, 0x3c, 0xd2,
+    0xa0, 0x1c, 0x43, 0x43, 0x40, 0x70, 0xd, 0x57,
+    0x81, 0xc0, 0x3d, 0x7, 0xd7, 0x0, 0xc0, 0x4,
+    0x0, 0x0, 0x0, 0x0,
+
     /* U+9664 "除" */
     0x0, 0x1, 0x40, 0x2, 0x9, 0xf, 0x40, 0xe,
     0xbc, 0x36, 0x0, 0x34, 0xc2, 0x8a, 0x0, 0xd6,
@@ -906,135 +1434,224 @@ static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {
     {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
     {.bitmap_index = 0, .adv_w = 64, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0},
     {.bitmap_index = 0, .adv_w = 56, .box_w = 3, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 8, .adv_w = 75, .box_w = 5, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 27, .adv_w = 75, .box_w = 5, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 46, .adv_w = 80, .box_w = 5, .box_h = 1, .ofs_x = 0, .ofs_y = 3},
-    {.bitmap_index = 48, .adv_w = 56, .box_w = 3, .box_h = 2, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 50, .adv_w = 120, .box_w = 8, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 70, .adv_w = 120, .box_w = 6, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 85, .adv_w = 120, .box_w = 8, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 105, .adv_w = 120, .box_w = 8, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 125, .adv_w = 120, .box_w = 8, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 145, .adv_w = 120, .box_w = 7, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 163, .adv_w = 120, .box_w = 7, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 181, .adv_w = 120, .box_w = 7, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 199, .adv_w = 120, .box_w = 7, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 217, .adv_w = 120, .box_w = 7, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 235, .adv_w = 93, .box_w = 6, .box_h = 11, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 252, .adv_w = 176, .box_w = 12, .box_h = 11, .ofs_x = -1, .ofs_y = 0},
-    {.bitmap_index = 285, .adv_w = 198, .box_w = 12, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 315, .adv_w = 202, .box_w = 13, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
-    {.bitmap_index = 354, .adv_w = 148, .box_w = 9, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 377, .adv_w = 120, .box_w = 8, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 397, .adv_w = 160, .box_w = 10, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
-    {.bitmap_index = 425, .adv_w = 177, .box_w = 12, .box_h = 11, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 458, .adv_w = 165, .box_w = 10, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 483, .adv_w = 200, .box_w = 13, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
-    {.bitmap_index = 509, .adv_w = 134, .box_w = 9, .box_h = 6, .ofs_x = 0, .ofs_y = 1},
-    {.bitmap_index = 523, .adv_w = 256, .box_w = 14, .box_h = 13, .ofs_x = 1, .ofs_y = -1},
-    {.bitmap_index = 569, .adv_w = 256, .box_w = 16, .box_h = 3, .ofs_x = 0, .ofs_y = 5},
-    {.bitmap_index = 581, .adv_w = 256, .box_w = 16, .box_h = 12, .ofs_x = 0, .ofs_y = -1},
-    {.bitmap_index = 629, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -2},
-    {.bitmap_index = 689, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 753, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 817, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 881, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 945, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 1009, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 1073, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 1133, .adv_w = 256, .box_w = 15, .box_h = 16, .ofs_x = 1, .ofs_y = -3},
-    {.bitmap_index = 1193, .adv_w = 256, .box_w = 16, .box_h = 17, .ofs_x = 0, .ofs_y = -4},
-    {.bitmap_index = 1261, .adv_w = 256, .box_w = 15, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 1321, .adv_w = 256, .box_w = 15, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 1381, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 1445, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 1505, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 1565, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 1629, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 1693, .adv_w = 256, .box_w = 16, .box_h = 14, .ofs_x = 0, .ofs_y = -2},
-    {.bitmap_index = 1749, .adv_w = 256, .box_w = 15, .box_h = 15, .ofs_x = 0, .ofs_y = -2},
-    {.bitmap_index = 1806, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 1870, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 1934, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 1998, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 2062, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 2126, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 2186, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 2250, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 2314, .adv_w = 256, .box_w = 16, .box_h = 13, .ofs_x = 0, .ofs_y = -1},
-    {.bitmap_index = 2366, .adv_w = 256, .box_w = 15, .box_h = 15, .ofs_x = 1, .ofs_y = -2},
-    {.bitmap_index = 2423, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 2487, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -4},
-    {.bitmap_index = 2551, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 2611, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 2675, .adv_w = 256, .box_w = 14, .box_h = 16, .ofs_x = 1, .ofs_y = -3},
-    {.bitmap_index = 2731, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 2791, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -2},
-    {.bitmap_index = 2851, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 2915, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 2979, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 3043, .adv_w = 256, .box_w = 16, .box_h = 14, .ofs_x = 0, .ofs_y = -2},
-    {.bitmap_index = 3099, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 3163, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 3227, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 3291, .adv_w = 256, .box_w = 16, .box_h = 14, .ofs_x = 0, .ofs_y = -2},
-    {.bitmap_index = 3347, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -4},
-    {.bitmap_index = 3411, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 3475, .adv_w = 256, .box_w = 15, .box_h = 14, .ofs_x = 0, .ofs_y = -2},
-    {.bitmap_index = 3528, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 3592, .adv_w = 256, .box_w = 14, .box_h = 16, .ofs_x = 1, .ofs_y = -4},
-    {.bitmap_index = 3648, .adv_w = 256, .box_w = 14, .box_h = 16, .ofs_x = 2, .ofs_y = -3},
-    {.bitmap_index = 3704, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -2},
-    {.bitmap_index = 3764, .adv_w = 256, .box_w = 16, .box_h = 17, .ofs_x = 0, .ofs_y = -4},
-    {.bitmap_index = 3832, .adv_w = 256, .box_w = 15, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 3892, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 3952, .adv_w = 256, .box_w = 16, .box_h = 14, .ofs_x = 0, .ofs_y = -2},
-    {.bitmap_index = 4008, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 4072, .adv_w = 256, .box_w = 11, .box_h = 16, .ofs_x = 3, .ofs_y = -3},
-    {.bitmap_index = 4116, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 4180, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 4244, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 4304, .adv_w = 256, .box_w = 15, .box_h = 15, .ofs_x = 0, .ofs_y = -2},
-    {.bitmap_index = 4361, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 4421, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 4485, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 4545, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 4609, .adv_w = 256, .box_w = 16, .box_h = 17, .ofs_x = 0, .ofs_y = -4},
-    {.bitmap_index = 4677, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 4741, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 4805, .adv_w = 256, .box_w = 16, .box_h = 17, .ofs_x = 0, .ofs_y = -4},
-    {.bitmap_index = 4873, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 4937, .adv_w = 256, .box_w = 14, .box_h = 16, .ofs_x = 1, .ofs_y = -3},
-    {.bitmap_index = 4993, .adv_w = 256, .box_w = 15, .box_h = 16, .ofs_x = 1, .ofs_y = -3},
-    {.bitmap_index = 5053, .adv_w = 256, .box_w = 16, .box_h = 17, .ofs_x = 0, .ofs_y = -4}
+    {.bitmap_index = 8, .adv_w = 104, .box_w = 5, .box_h = 5, .ofs_x = 1, .ofs_y = 6},
+    {.bitmap_index = 15, .adv_w = 171, .box_w = 10, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 40, .adv_w = 115, .box_w = 8, .box_h = 13, .ofs_x = 0, .ofs_y = -1},
+    {.bitmap_index = 66, .adv_w = 211, .box_w = 11, .box_h = 13, .ofs_x = 1, .ofs_y = -1},
+    {.bitmap_index = 102, .adv_w = 187, .box_w = 12, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 132, .adv_w = 45, .box_w = 3, .box_h = 5, .ofs_x = 0, .ofs_y = 6},
+    {.bitmap_index = 136, .adv_w = 75, .box_w = 5, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 155, .adv_w = 75, .box_w = 5, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 174, .adv_w = 109, .box_w = 7, .box_h = 6, .ofs_x = 0, .ofs_y = 5},
+    {.bitmap_index = 185, .adv_w = 171, .box_w = 9, .box_h = 9, .ofs_x = 1, .ofs_y = 1},
+    {.bitmap_index = 206, .adv_w = 56, .box_w = 4, .box_h = 4, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 210, .adv_w = 80, .box_w = 5, .box_h = 1, .ofs_x = 0, .ofs_y = 3},
+    {.bitmap_index = 212, .adv_w = 56, .box_w = 3, .box_h = 2, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 214, .adv_w = 128, .box_w = 8, .box_h = 13, .ofs_x = 0, .ofs_y = -1},
+    {.bitmap_index = 240, .adv_w = 120, .box_w = 8, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 260, .adv_w = 120, .box_w = 6, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 275, .adv_w = 120, .box_w = 8, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 295, .adv_w = 120, .box_w = 8, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 315, .adv_w = 120, .box_w = 8, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 335, .adv_w = 120, .box_w = 7, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 353, .adv_w = 120, .box_w = 7, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 371, .adv_w = 120, .box_w = 7, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 389, .adv_w = 120, .box_w = 7, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 407, .adv_w = 120, .box_w = 7, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 425, .adv_w = 56, .box_w = 3, .box_h = 6, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 430, .adv_w = 56, .box_w = 4, .box_h = 9, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 439, .adv_w = 171, .box_w = 9, .box_h = 9, .ofs_x = 1, .ofs_y = 1},
+    {.bitmap_index = 460, .adv_w = 171, .box_w = 9, .box_h = 4, .ofs_x = 1, .ofs_y = 4},
+    {.bitmap_index = 469, .adv_w = 171, .box_w = 9, .box_h = 9, .ofs_x = 1, .ofs_y = 1},
+    {.bitmap_index = 490, .adv_w = 93, .box_w = 6, .box_h = 11, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 507, .adv_w = 235, .box_w = 15, .box_h = 13, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 556, .adv_w = 176, .box_w = 12, .box_h = 11, .ofs_x = -1, .ofs_y = 0},
+    {.bitmap_index = 589, .adv_w = 161, .box_w = 10, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 614, .adv_w = 163, .box_w = 10, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 639, .adv_w = 198, .box_w = 12, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 669, .adv_w = 170, .box_w = 11, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 697, .adv_w = 147, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 722, .adv_w = 197, .box_w = 13, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 755, .adv_w = 202, .box_w = 13, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 794, .adv_w = 91, .box_w = 6, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 812, .adv_w = 86, .box_w = 7, .box_h = 14, .ofs_x = -2, .ofs_y = -2},
+    {.bitmap_index = 837, .adv_w = 191, .box_w = 12, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 873, .adv_w = 151, .box_w = 10, .box_h = 11, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 901, .adv_w = 231, .box_w = 15, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 946, .adv_w = 200, .box_w = 12, .box_h = 11, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 979, .adv_w = 198, .box_w = 12, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1009, .adv_w = 148, .box_w = 9, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1032, .adv_w = 196, .box_w = 12, .box_h = 13, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 1071, .adv_w = 174, .box_w = 11, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1099, .adv_w = 120, .box_w = 8, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1119, .adv_w = 160, .box_w = 10, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 1147, .adv_w = 184, .box_w = 12, .box_h = 11, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1180, .adv_w = 177, .box_w = 12, .box_h = 11, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1213, .adv_w = 231, .box_w = 16, .box_h = 11, .ofs_x = -1, .ofs_y = 1},
+    {.bitmap_index = 1257, .adv_w = 181, .box_w = 12, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 1293, .adv_w = 172, .box_w = 11, .box_h = 11, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1324, .adv_w = 165, .box_w = 10, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1349, .adv_w = 69, .box_w = 4, .box_h = 13, .ofs_x = 1, .ofs_y = -2},
+    {.bitmap_index = 1362, .adv_w = 128, .box_w = 8, .box_h = 13, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 1388, .adv_w = 69, .box_w = 5, .box_h = 13, .ofs_x = -1, .ofs_y = -2},
+    {.bitmap_index = 1405, .adv_w = 128, .box_w = 8, .box_h = 5, .ofs_x = 0, .ofs_y = 7},
+    {.bitmap_index = 1415, .adv_w = 130, .box_w = 10, .box_h = 2, .ofs_x = -1, .ofs_y = -2},
+    {.bitmap_index = 1420, .adv_w = 85, .box_w = 4, .box_h = 3, .ofs_x = 1, .ofs_y = 8},
+    {.bitmap_index = 1423, .adv_w = 127, .box_w = 8, .box_h = 7, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1437, .adv_w = 133, .box_w = 8, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1457, .adv_w = 104, .box_w = 7, .box_h = 6, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1468, .adv_w = 132, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 1490, .adv_w = 109, .box_w = 7, .box_h = 6, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1501, .adv_w = 88, .box_w = 7, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 1521, .adv_w = 114, .box_w = 7, .box_h = 10, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 1539, .adv_w = 136, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 1564, .adv_w = 69, .box_w = 5, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 1578, .adv_w = 61, .box_w = 4, .box_h = 14, .ofs_x = -1, .ofs_y = -3},
+    {.bitmap_index = 1592, .adv_w = 127, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 1617, .adv_w = 69, .box_w = 5, .box_h = 10, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1630, .adv_w = 200, .box_w = 13, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 1656, .adv_w = 136, .box_w = 9, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 1674, .adv_w = 127, .box_w = 8, .box_h = 6, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1686, .adv_w = 134, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 1708, .adv_w = 133, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 1733, .adv_w = 95, .box_w = 6, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 1745, .adv_w = 92, .box_w = 6, .box_h = 6, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1754, .adv_w = 85, .box_w = 6, .box_h = 8, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1766, .adv_w = 134, .box_w = 9, .box_h = 6, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1780, .adv_w = 121, .box_w = 9, .box_h = 7, .ofs_x = -1, .ofs_y = 1},
+    {.bitmap_index = 1796, .adv_w = 171, .box_w = 12, .box_h = 7, .ofs_x = -1, .ofs_y = 1},
+    {.bitmap_index = 1817, .adv_w = 116, .box_w = 8, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 1833, .adv_w = 113, .box_w = 9, .box_h = 10, .ofs_x = -1, .ofs_y = -2},
+    {.bitmap_index = 1856, .adv_w = 105, .box_w = 7, .box_h = 7, .ofs_x = 0, .ofs_y = 1},
+    {.bitmap_index = 1869, .adv_w = 123, .box_w = 6, .box_h = 15, .ofs_x = 1, .ofs_y = -3},
+    {.bitmap_index = 1892, .adv_w = 128, .box_w = 2, .box_h = 13, .ofs_x = 3, .ofs_y = -2},
+    {.bitmap_index = 1899, .adv_w = 123, .box_w = 6, .box_h = 15, .ofs_x = 1, .ofs_y = -3},
+    {.bitmap_index = 1922, .adv_w = 171, .box_w = 9, .box_h = 3, .ofs_x = 1, .ofs_y = 3},
+    {.bitmap_index = 1929, .adv_w = 256, .box_w = 14, .box_h = 13, .ofs_x = 1, .ofs_y = -1},
+    {.bitmap_index = 1975, .adv_w = 256, .box_w = 16, .box_h = 3, .ofs_x = 0, .ofs_y = 5},
+    {.bitmap_index = 1987, .adv_w = 256, .box_w = 16, .box_h = 14, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 2043, .adv_w = 256, .box_w = 16, .box_h = 14, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 2099, .adv_w = 256, .box_w = 16, .box_h = 14, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 2155, .adv_w = 256, .box_w = 15, .box_h = 15, .ofs_x = 1, .ofs_y = -2},
+    {.bitmap_index = 2212, .adv_w = 256, .box_w = 16, .box_h = 12, .ofs_x = 0, .ofs_y = -1},
+    {.bitmap_index = 2260, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 2320, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 2384, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 2448, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 2512, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 2576, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 2640, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 2704, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 2764, .adv_w = 256, .box_w = 15, .box_h = 16, .ofs_x = 1, .ofs_y = -3},
+    {.bitmap_index = 2824, .adv_w = 256, .box_w = 16, .box_h = 17, .ofs_x = 0, .ofs_y = -4},
+    {.bitmap_index = 2892, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -4},
+    {.bitmap_index = 2956, .adv_w = 256, .box_w = 15, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 3016, .adv_w = 256, .box_w = 15, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 3076, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 3140, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 3200, .adv_w = 256, .box_w = 15, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 3260, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 3320, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 3384, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 3448, .adv_w = 256, .box_w = 16, .box_h = 14, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 3504, .adv_w = 256, .box_w = 15, .box_h = 15, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 3561, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 3625, .adv_w = 256, .box_w = 17, .box_h = 16, .ofs_x = -1, .ofs_y = -3},
+    {.bitmap_index = 3693, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 3757, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 3821, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 3885, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 3949, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 4009, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 4073, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 4137, .adv_w = 256, .box_w = 16, .box_h = 13, .ofs_x = 0, .ofs_y = -1},
+    {.bitmap_index = 4189, .adv_w = 256, .box_w = 15, .box_h = 15, .ofs_x = 1, .ofs_y = -2},
+    {.bitmap_index = 4246, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 4310, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -4},
+    {.bitmap_index = 4374, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 4434, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 4494, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 4558, .adv_w = 256, .box_w = 14, .box_h = 16, .ofs_x = 1, .ofs_y = -3},
+    {.bitmap_index = 4614, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 4674, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 4734, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 4798, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 4862, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 4926, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 4990, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 5054, .adv_w = 256, .box_w = 16, .box_h = 14, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 5110, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 5170, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 5234, .adv_w = 256, .box_w = 16, .box_h = 17, .ofs_x = 0, .ofs_y = -4},
+    {.bitmap_index = 5302, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 5366, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 5430, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 5494, .adv_w = 256, .box_w = 16, .box_h = 14, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 5550, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -4},
+    {.bitmap_index = 5614, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 5678, .adv_w = 256, .box_w = 15, .box_h = 14, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 5731, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 5795, .adv_w = 256, .box_w = 14, .box_h = 16, .ofs_x = 1, .ofs_y = -4},
+    {.bitmap_index = 5851, .adv_w = 256, .box_w = 14, .box_h = 16, .ofs_x = 2, .ofs_y = -3},
+    {.bitmap_index = 5907, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 5967, .adv_w = 256, .box_w = 16, .box_h = 17, .ofs_x = 0, .ofs_y = -4},
+    {.bitmap_index = 6035, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 6099, .adv_w = 256, .box_w = 15, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 6159, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 6223, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 6283, .adv_w = 256, .box_w = 16, .box_h = 14, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 6339, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 6403, .adv_w = 256, .box_w = 11, .box_h = 16, .ofs_x = 3, .ofs_y = -3},
+    {.bitmap_index = 6447, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 6511, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 6575, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 6635, .adv_w = 256, .box_w = 15, .box_h = 15, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 6692, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 6756, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 6816, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 6880, .adv_w = 256, .box_w = 16, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 6940, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 7004, .adv_w = 256, .box_w = 16, .box_h = 17, .ofs_x = 0, .ofs_y = -4},
+    {.bitmap_index = 7072, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 7136, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 7200, .adv_w = 256, .box_w = 16, .box_h = 17, .ofs_x = 0, .ofs_y = -4},
+    {.bitmap_index = 7268, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 7332, .adv_w = 256, .box_w = 16, .box_h = 16, .ofs_x = 0, .ofs_y = -3},
+    {.bitmap_index = 7396, .adv_w = 256, .box_w = 14, .box_h = 16, .ofs_x = 1, .ofs_y = -3},
+    {.bitmap_index = 7452, .adv_w = 256, .box_w = 15, .box_h = 16, .ofs_x = 1, .ofs_y = -3},
+    {.bitmap_index = 7512, .adv_w = 256, .box_w = 15, .box_h = 16, .ofs_x = 1, .ofs_y = -3},
+    {.bitmap_index = 7572, .adv_w = 256, .box_w = 16, .box_h = 17, .ofs_x = 0, .ofs_y = -4}
 };
 
 /*---------------------
  *  CHARACTER MAPPING
  *--------------------*/
 
-static const uint16_t unicode_list_0[] = {
-    0x0, 0x1, 0x8, 0x9, 0xd, 0xe, 0x10, 0x11,
-    0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19,
-    0x1f, 0x21, 0x24, 0x28, 0x30, 0x33, 0x34, 0x36,
-    0x3a, 0x4d, 0x55, 0x20e3, 0x4de0, 0x4e6c, 0x4f2d, 0x4f3c,
-    0x4fbd, 0x501c, 0x502f, 0x5128, 0x5129, 0x5145, 0x5153, 0x51e6,
-    0x520b, 0x5216, 0x527f, 0x5288, 0x536b, 0x53a2, 0x53b1, 0x5406,
-    0x540f, 0x542a, 0x5907, 0x5911, 0x5b38, 0x5b7a, 0x5bef, 0x5bf6,
-    0x5cd0, 0x5dc5, 0x5e25, 0x5e86, 0x5ee0, 0x5f35, 0x61f0, 0x6217,
-    0x6233, 0x624b, 0x63af, 0x6550, 0x660f, 0x66e0, 0x6817, 0x6cc1,
-    0x6d21, 0x6e09, 0x6e70, 0x6fa0, 0x7099, 0x7367, 0x7508, 0x7515,
-    0x765b, 0x76d8, 0x79cf, 0x7e87, 0x7f4e, 0x7fe5, 0x81ca, 0x89c3,
-    0x8b46, 0x8b9e, 0x8ba6, 0x8bcf, 0x8bd7, 0x8be3, 0x8d05, 0x8f73,
-    0x91a7, 0x94cf, 0x94e1, 0x94f9, 0x95cd, 0x9644, 0x9871
+static const uint16_t unicode_list_1[] = {
+    0x0, 0x2cfd, 0x2d06, 0x2d07, 0x2d08, 0x2d2a, 0x2d89, 0x2e4a,
+    0x2e59, 0x2eda, 0x2f39, 0x2f4c, 0x3045, 0x3046, 0x3062, 0x3070,
+    0x3103, 0x3104, 0x3128, 0x3133, 0x319c, 0x31a5, 0x31fc, 0x3288,
+    0x32bf, 0x32ce, 0x3323, 0x332c, 0x3347, 0x3565, 0x3824, 0x382e,
+    0x3a55, 0x3a97, 0x3b0c, 0x3b13, 0x3bed, 0x3ce2, 0x3d42, 0x3da3,
+    0x3dfd, 0x3e0c, 0x3e52, 0x410d, 0x4134, 0x4150, 0x4168, 0x41c6,
+    0x425f, 0x42cc, 0x446d, 0x452c, 0x45fd, 0x4637, 0x4734, 0x491e,
+    0x4bd2, 0x4bde, 0x4c3e, 0x4d26, 0x4d8d, 0x4ebd, 0x4fb6, 0x5284,
+    0x5425, 0x5432, 0x5578, 0x55f5, 0x58cf, 0x58ec, 0x5a29, 0x5da4,
+    0x5e6b, 0x5f02, 0x60e7, 0x68e0, 0x6a63, 0x6abb, 0x6ac3, 0x6ad2,
+    0x6aec, 0x6af4, 0x6b00, 0x6c22, 0x6e90, 0x70c4, 0x73ec, 0x73fe,
+    0x7416, 0x742b, 0x74ea, 0x754d, 0x7561, 0x778e
 };
 
 /*Collect the unicode lists and glyph_id offsets*/
 static const lv_font_fmt_txt_cmap_t cmaps[] =
 {
     {
-        .range_start = 32, .range_length = 39026, .glyph_id_start = 1,
-        .unicode_list = unicode_list_0, .glyph_id_ofs_list = NULL, .list_length = 103, .type = LV_FONT_FMT_TXT_CMAP_SPARSE_TINY
+        .range_start = 32, .range_length = 95, .glyph_id_start = 1,
+        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
+    },
+    {
+        .range_start = 8451, .range_length = 30607, .glyph_id_start = 96,
+        .unicode_list = unicode_list_1, .glyph_id_ofs_list = NULL, .list_length = 94, .type = LV_FONT_FMT_TXT_CMAP_SPARSE_TINY
     }
 };
 
@@ -1044,9 +1661,12 @@ static const lv_font_fmt_txt_cmap_t cmaps[] =
  *  ALL CUSTOM DATA
  *--------------------*/
 
-#if LV_VERSION_CHECK(8, 0, 0)
+#if LVGL_VERSION_MAJOR == 8
 /*Store all the custom data of the font*/
 static  lv_font_fmt_txt_glyph_cache_t cache;
+#endif
+
+#if LVGL_VERSION_MAJOR >= 8
 static const lv_font_fmt_txt_dsc_t font_dsc = {
 #else
 static lv_font_fmt_txt_dsc_t font_dsc = {
@@ -1056,22 +1676,23 @@ static lv_font_fmt_txt_dsc_t font_dsc = {
     .cmaps = cmaps,
     .kern_dsc = NULL,
     .kern_scale = 0,
-    .cmap_num = 1,
+    .cmap_num = 2,
     .bpp = 2,
     .kern_classes = 0,
     .bitmap_format = 0,
-#if LV_VERSION_CHECK(8, 0, 0)
+#if LVGL_VERSION_MAJOR == 8
     .cache = &cache
 #endif
 };
 
 
+
 /*-----------------
  *  PUBLIC FONT
  *----------------*/
 
 /*Initialize a public general font descriptor*/
-#if LV_VERSION_CHECK(8, 0, 0)
+#if LVGL_VERSION_MAJOR >= 8
 const lv_font_t font_ch_16 = {
 #else
 lv_font_t font_ch_16 = {
@@ -1087,7 +1708,11 @@ lv_font_t font_ch_16 = {
     .underline_position = -2,
     .underline_thickness = 0,
 #endif
-    .dsc = &font_dsc           /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
+    .dsc = &font_dsc,          /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
+#if LV_VERSION_CHECK(8, 2, 0) || LVGL_VERSION_MAJOR >= 9
+    .fallback = NULL,
+#endif
+    .user_data = NULL,
 };
 
 
diff --git a/components/utilities/ui/font_symbol_32.c b/components/utilities/ui/font_symbol_32.c
index 29bd662..a556359 100644
--- a/components/utilities/ui/font_symbol_32.c
+++ b/components/utilities/ui/font_symbol_32.c
@@ -18,6 +18,144 @@
 
 /*Store the image of the glyphs*/
 static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
+    /* U+F011 "" */
+    0x0, 0x0, 0x0, 0x1f, 0xe0, 0x0, 0x0, 0x0,
+    0x0, 0x0, 0x0, 0xff, 0xc0, 0x0, 0x0, 0x0,
+    0x0, 0x0, 0x3, 0xff, 0x0, 0x0, 0x0, 0x0,
+    0x0, 0x90, 0xf, 0xfc, 0x0, 0x90, 0x0, 0x0,
+    0x1f, 0xc0, 0x3f, 0xf0, 0xf, 0xd0, 0x0, 0x1,
+    0xff, 0xc0, 0xff, 0xc0, 0xbf, 0xe0, 0x0, 0x1f,
+    0xff, 0x3, 0xff, 0x3, 0xff, 0xd0, 0x0, 0xff,
+    0xf8, 0xf, 0xfc, 0xb, 0xff, 0xc0, 0xb, 0xff,
+    0x80, 0x3f, 0xf0, 0xb, 0xff, 0xc0, 0x3f, 0xf8,
+    0x0, 0xff, 0xc0, 0xb, 0xff, 0x42, 0xff, 0xc0,
+    0x3, 0xff, 0x0, 0xf, 0xff, 0xf, 0xfd, 0x0,
+    0xf, 0xfc, 0x0, 0x1f, 0xfc, 0x3f, 0xf0, 0x0,
+    0x3f, 0xf0, 0x0, 0x3f, 0xf5, 0xff, 0x80, 0x0,
+    0xff, 0xc0, 0x0, 0x7f, 0xeb, 0xfd, 0x0, 0x3,
+    0xff, 0x0, 0x1, 0xff, 0xef, 0xf4, 0x0, 0xf,
+    0xfc, 0x0, 0x3, 0xff, 0xbf, 0xd0, 0x0, 0x3f,
+    0xf0, 0x0, 0xf, 0xfe, 0xff, 0x40, 0x0, 0x7f,
+    0x80, 0x0, 0x3f, 0xfb, 0xfe, 0x0, 0x0, 0x0,
+    0x0, 0x1, 0xff, 0x9f, 0xfc, 0x0, 0x0, 0x0,
+    0x0, 0xb, 0xfe, 0x3f, 0xf0, 0x0, 0x0, 0x0,
+    0x0, 0x3f, 0xf4, 0xff, 0xe0, 0x0, 0x0, 0x0,
+    0x2, 0xff, 0xc1, 0xff, 0xd0, 0x0, 0x0, 0x0,
+    0xf, 0xfe, 0x3, 0xff, 0xc0, 0x0, 0x0, 0x0,
+    0xff, 0xf0, 0x7, 0xff, 0xd0, 0x0, 0x0, 0xf,
+    0xff, 0x80, 0xb, 0xff, 0xe0, 0x0, 0x2, 0xff,
+    0xfc, 0x0, 0xf, 0xff, 0xfd, 0x55, 0xbf, 0xff,
+    0xc0, 0x0, 0xf, 0xff, 0xff, 0xff, 0xff, 0xfc,
+    0x0, 0x0, 0xb, 0xff, 0xff, 0xff, 0xff, 0xc0,
+    0x0, 0x0, 0x7, 0xff, 0xff, 0xff, 0xf8, 0x0,
+    0x0, 0x0, 0x1, 0xff, 0xff, 0xfe, 0x0, 0x0,
+    0x0, 0x0, 0x0, 0x1a, 0xa9, 0x0, 0x0, 0x0,
+
+    /* U+F023 "" */
+    0x0, 0x0, 0x6, 0xff, 0x90, 0x0, 0x0, 0x0,
+    0x0, 0x3f, 0xff, 0xfc, 0x0, 0x0, 0x0, 0x1,
+    0xff, 0xff, 0xff, 0x40, 0x0, 0x0, 0x7, 0xff,
+    0xff, 0xff, 0xd0, 0x0, 0x0, 0xf, 0xff, 0xff,
+    0xff, 0xf0, 0x0, 0x0, 0x2f, 0xff, 0x41, 0xff,
+    0xf8, 0x0, 0x0, 0x3f, 0xf8, 0x0, 0x2f, 0xfc,
+    0x0, 0x0, 0x7f, 0xf0, 0x0, 0xf, 0xfd, 0x0,
+    0x0, 0x7f, 0xe0, 0x0, 0xb, 0xfd, 0x0, 0x0,
+    0x7f, 0xe0, 0x0, 0xb, 0xfd, 0x0, 0x0, 0xbf,
+    0xe0, 0x0, 0xb, 0xfe, 0x0, 0x0, 0xbf, 0xe0,
+    0x0, 0xb, 0xfe, 0x0, 0x0, 0xbf, 0xe0, 0x0,
+    0xb, 0xfe, 0x0, 0x0, 0xbf, 0xe0, 0x0, 0xb,
+    0xfe, 0x0, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xf8, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xfe, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8,
+
+    /* U+F044 "" */
+    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2e,
+    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
+    0xff, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
+    0x3, 0xff, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0,
+    0x0, 0xb, 0xff, 0xfc, 0x2f, 0xff, 0xff, 0xff,
+    0xff, 0xd0, 0x2, 0xff, 0xfe, 0xbf, 0xff, 0xff,
+    0xff, 0xff, 0xc0, 0xd0, 0xbf, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0x3, 0xf8, 0x2f, 0xfe, 0xff,
+    0xff, 0xff, 0xff, 0xfc, 0xf, 0xfe, 0xb, 0xfc,
+    0xff, 0x0, 0x0, 0x0, 0x0, 0x3f, 0xff, 0x82,
+    0xf0, 0xff, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff,
+    0xe0, 0x80, 0xff, 0x0, 0x0, 0x0, 0x3, 0xff,
+    0xff, 0xf4, 0x0, 0xff, 0x0, 0x0, 0x0, 0xf,
+    0xff, 0xff, 0xfc, 0x0, 0xff, 0x0, 0x0, 0x0,
+    0x3f, 0xff, 0xff, 0xf0, 0x0, 0xff, 0x0, 0x0,
+    0x0, 0xff, 0xff, 0xff, 0xc0, 0x0, 0xff, 0x0,
+    0x0, 0x3, 0xff, 0xff, 0xff, 0x0, 0x0, 0xff,
+    0x0, 0x0, 0xf, 0xff, 0xff, 0xfc, 0x0, 0x0,
+    0xff, 0x0, 0x0, 0x3f, 0xff, 0xff, 0xf0, 0x0,
+    0x0, 0xff, 0x0, 0x0, 0xff, 0xff, 0xff, 0xc0,
+    0x0, 0x0, 0xff, 0x0, 0x3, 0xff, 0xff, 0xff,
+    0x1, 0x0, 0x0, 0xff, 0x0, 0x7, 0xff, 0xff,
+    0xfc, 0xf, 0x0, 0x0, 0xff, 0x0, 0xb, 0xff,
+    0xff, 0xf0, 0x3f, 0x0, 0x0, 0xff, 0x0, 0xb,
+    0xff, 0xff, 0xc0, 0xff, 0x0, 0x0, 0xff, 0x0,
+    0xf, 0xff, 0xff, 0x0, 0xff, 0x0, 0x0, 0xff,
+    0x0, 0xf, 0xff, 0xfc, 0x0, 0xff, 0x0, 0x0,
+    0xff, 0x0, 0xf, 0xff, 0xf0, 0x0, 0xff, 0x0,
+    0x0, 0xff, 0x0, 0xb, 0xfa, 0x40, 0x0, 0xff,
+    0x0, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0,
+    0xff, 0x0, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0,
+    0x0, 0xff, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0x0, 0x0, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0xbf, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xfe, 0x0, 0x0, 0x2f,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x0, 0x0,
+
+    /* U+F0AD "" */
+    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
+    0x0, 0x0, 0x0, 0x0, 0x0, 0x6f, 0xf4, 0x0,
+    0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xfd, 0x0,
+    0x0, 0x0, 0x0, 0x0, 0x1, 0xff, 0xfe, 0x0,
+    0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xfe, 0x0,
+    0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xfe, 0x0,
+    0x0, 0x0, 0x0, 0x0, 0x0, 0x7f, 0xfe, 0x0,
+    0x0, 0x0, 0x0, 0x0, 0x0, 0x2f, 0xff, 0x0,
+    0x0, 0x14, 0x0, 0x0, 0x0, 0xf, 0xff, 0xc0,
+    0x0, 0x2f, 0x0, 0x0, 0x0, 0x3, 0xff, 0xf0,
+    0x0, 0x2f, 0xc0, 0x0, 0x0, 0x0, 0xff, 0xfd,
+    0x0, 0x2f, 0xf0, 0x0, 0x0, 0x0, 0x3f, 0xff,
+    0xd0, 0x2f, 0xfc, 0x0, 0x0, 0x0, 0xb, 0xff,
+    0xff, 0xff, 0xfe, 0x0, 0x0, 0x0, 0x3, 0xff,
+    0xff, 0xff, 0xff, 0x40, 0x0, 0x0, 0x3, 0xff,
+    0xff, 0xff, 0xff, 0xc0, 0x0, 0x0, 0x3, 0xff,
+    0xff, 0xff, 0xff, 0xc0, 0x0, 0x0, 0x3, 0xff,
+    0xff, 0xff, 0xff, 0xd0, 0x0, 0x0, 0x3, 0xff,
+    0xff, 0xff, 0xff, 0xc0, 0x0, 0x0, 0x3, 0xff,
+    0xff, 0xfb, 0xfe, 0x40, 0x0, 0x0, 0x3, 0xff,
+    0xff, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xff,
+    0xff, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xff,
+    0xff, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xff,
+    0xff, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xff,
+    0xff, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xff,
+    0xff, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xff,
+    0xff, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x3, 0xff,
+    0xff, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x2, 0xfa,
+    0xff, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8,
+    0x2f, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3e,
+    0xb, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb,
+    0xeb, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
+    0xff, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
+    0xb, 0xe0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
+    0x0,
+
     /* U+F0C7 "" */
     0x2f, 0xff, 0xff, 0xff, 0xff, 0xd0, 0x0, 0xbf,
     0xff, 0xff, 0xff, 0xff, 0xf8, 0x0, 0xff, 0xff,
@@ -45,6 +183,36 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0xff, 0xff, 0xff, 0xff, 0xfe, 0x2f, 0xff, 0xff,
     0xff, 0xff, 0xff, 0xf8,
 
+    /* U+F13E "" */
+    0x0, 0x0, 0x6, 0xff, 0x90, 0x0, 0x0, 0x0,
+    0x0, 0x3f, 0xff, 0xfc, 0x0, 0x0, 0x0, 0x1,
+    0xff, 0xff, 0xff, 0x40, 0x0, 0x0, 0x7, 0xff,
+    0xff, 0xff, 0xd0, 0x0, 0x0, 0xf, 0xff, 0xff,
+    0xff, 0xf0, 0x0, 0x0, 0x2f, 0xff, 0x41, 0xff,
+    0xf8, 0x0, 0x0, 0x3f, 0xf8, 0x0, 0x2f, 0xfc,
+    0x0, 0x0, 0x7f, 0xf0, 0x0, 0xf, 0xfd, 0x0,
+    0x0, 0x7f, 0xe0, 0x0, 0xb, 0xfd, 0x0, 0x0,
+    0x7f, 0xe0, 0x0, 0xb, 0xfd, 0x0, 0x0, 0xbf,
+    0xe0, 0x0, 0x7, 0xfd, 0x0, 0x0, 0xbf, 0xe0,
+    0x0, 0x3, 0xfc, 0x0, 0x0, 0xbf, 0xe0, 0x0,
+    0x0, 0x0, 0x0, 0x0, 0xbf, 0xe0, 0x0, 0x0,
+    0x0, 0x0, 0x0, 0xbf, 0xe0, 0x0, 0x0, 0x0,
+    0x0, 0x0, 0xbf, 0xe0, 0x0, 0x0, 0x0, 0x0,
+    0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xbf,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x82,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x0, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xfe, 0x0, 0xbf, 0xff,
+    0xff, 0xff, 0xff, 0xfe, 0x0, 0xbf, 0xff, 0xff,
+    0xff, 0xff, 0xfe, 0x0, 0xbf, 0xff, 0xff, 0xff,
+    0xff, 0xfe, 0x0, 0xbf, 0xff, 0xff, 0xff, 0xff,
+    0xfe, 0x0, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0x82, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xfe, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8,
+
     /* U+F1DE "" */
     0x0, 0x0, 0x0, 0xf, 0xf0, 0x0, 0x0, 0x0,
     0x0, 0x0, 0x0, 0xf, 0xf0, 0x0, 0x0, 0x0,
@@ -229,13 +397,18 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
 
 static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {
     {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
-    {.bitmap_index = 0, .adv_w = 448, .box_w = 28, .box_h = 28, .ofs_x = 0, .ofs_y = -2},
-    {.bitmap_index = 196, .adv_w = 512, .box_w = 32, .box_h = 28, .ofs_x = 0, .ofs_y = -2},
-    {.bitmap_index = 420, .adv_w = 512, .box_w = 32, .box_h = 24, .ofs_x = 0, .ofs_y = 0},
-    {.bitmap_index = 612, .adv_w = 512, .box_w = 32, .box_h = 25, .ofs_x = 0, .ofs_y = -1},
-    {.bitmap_index = 812, .adv_w = 496, .box_w = 31, .box_h = 32, .ofs_x = 0, .ofs_y = -4},
-    {.bitmap_index = 1060, .adv_w = 384, .box_w = 24, .box_h = 32, .ofs_x = 0, .ofs_y = -4},
-    {.bitmap_index = 1252, .adv_w = 512, .box_w = 32, .box_h = 32, .ofs_x = 0, .ofs_y = -4}
+    {.bitmap_index = 0, .adv_w = 512, .box_w = 31, .box_h = 32, .ofs_x = 0, .ofs_y = -4},
+    {.bitmap_index = 248, .adv_w = 448, .box_w = 28, .box_h = 32, .ofs_x = 0, .ofs_y = -4},
+    {.bitmap_index = 472, .adv_w = 576, .box_w = 36, .box_h = 32, .ofs_x = 0, .ofs_y = -4},
+    {.bitmap_index = 760, .adv_w = 512, .box_w = 33, .box_h = 33, .ofs_x = 0, .ofs_y = -4},
+    {.bitmap_index = 1033, .adv_w = 448, .box_w = 28, .box_h = 28, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 1229, .adv_w = 448, .box_w = 28, .box_h = 32, .ofs_x = 0, .ofs_y = -4},
+    {.bitmap_index = 1453, .adv_w = 512, .box_w = 32, .box_h = 28, .ofs_x = 0, .ofs_y = -2},
+    {.bitmap_index = 1677, .adv_w = 512, .box_w = 32, .box_h = 24, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 1869, .adv_w = 512, .box_w = 32, .box_h = 25, .ofs_x = 0, .ofs_y = -1},
+    {.bitmap_index = 2069, .adv_w = 496, .box_w = 31, .box_h = 32, .ofs_x = 0, .ofs_y = -4},
+    {.bitmap_index = 2317, .adv_w = 384, .box_w = 24, .box_h = 32, .ofs_x = 0, .ofs_y = -4},
+    {.bitmap_index = 2509, .adv_w = 512, .box_w = 32, .box_h = 32, .ofs_x = 0, .ofs_y = -4}
 };
 
 /*---------------------
@@ -243,15 +416,16 @@ static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {
  *--------------------*/
 
 static const uint16_t unicode_list_0[] = {
-    0x0, 0x117, 0x13a, 0x22f, 0x429, 0x4a5, 0x6a2
+    0x0, 0x12, 0x33, 0x9c, 0xb6, 0x12d, 0x1cd, 0x1f0,
+    0x2e5, 0x4df, 0x55b, 0x758
 };
 
 /*Collect the unicode lists and glyph_id offsets*/
 static const lv_font_fmt_txt_cmap_t cmaps[] =
 {
     {
-        .range_start = 61639, .range_length = 1699, .glyph_id_start = 1,
-        .unicode_list = unicode_list_0, .glyph_id_ofs_list = NULL, .list_length = 7, .type = LV_FONT_FMT_TXT_CMAP_SPARSE_TINY
+        .range_start = 61457, .range_length = 1881, .glyph_id_start = 1,
+        .unicode_list = unicode_list_0, .glyph_id_ofs_list = NULL, .list_length = 12, .type = LV_FONT_FMT_TXT_CMAP_SPARSE_TINY
     }
 };
 
@@ -295,7 +469,7 @@ lv_font_t font_symbol_32 = {
 #endif
     .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
     .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
-    .line_height = 32,          /*The maximum line height required by the font*/
+    .line_height = 33,          /*The maximum line height required by the font*/
     .base_line = 4,             /*Baseline measured from the bottom of the line*/
 #if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
     .subpx = LV_FONT_SUBPX_NONE,
diff --git a/components/utilities/ui/font_tw_15.c b/components/utilities/ui/font_tw_15.c
index ae0ff17..5a1479a 100644
--- a/components/utilities/ui/font_tw_15.c
+++ b/components/utilities/ui/font_tw_15.c
@@ -4,8 +4,10 @@
  * Opts: 
  ******************************************************************************/
 
+
 #include "lvgl.h"
 
+
 #ifndef FONT_TW_15
 #define FONT_TW_15 1
 #endif
@@ -18,8 +20,6 @@
 
 /*Store the image of the glyphs*/
 static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
-    /* U+0020 " " */
-
     /* U+0028 "(" */
     0x1, 0x1, 0x80, 0xc0, 0xa0, 0x30, 0x1c, 0xb,
     0x2, 0xc0, 0xb0, 0x1c, 0x3, 0x40, 0xa0, 0xc,
@@ -30,6 +30,64 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x38, 0xe, 0x3, 0x80, 0xd0, 0x70, 0x28, 0xc,
     0x9, 0x1, 0x0,
 
+    /* U+0030 "0" */
+    0x6, 0xa0, 0x7, 0x7, 0x3, 0xc0, 0xe0, 0xe0,
+    0x3c, 0x38, 0xf, 0x1e, 0x3, 0xc3, 0x80, 0xf0,
+    0xe0, 0x3c, 0x3c, 0xe, 0x7, 0x7, 0x0, 0x6a,
+    0x0,
+
+    /* U+0031 "1" */
+    0x1a, 0x40, 0x6e, 0x0, 0x78, 0x1, 0xd0, 0x7,
+    0x40, 0x1d, 0x0, 0x74, 0x1, 0xe0, 0x7, 0x80,
+    0x2e, 0x6, 0xfe, 0x40,
+
+    /* U+0032 "2" */
+    0x9, 0xb4, 0xf, 0xb, 0x43, 0x41, 0xe0, 0x0,
+    0x78, 0x0, 0x2c, 0x0, 0x1d, 0x0, 0xd, 0x0,
+    0xc, 0x0, 0x8, 0x0, 0xe, 0xaa, 0x83, 0xff,
+    0xf0,
+
+    /* U+0033 "3" */
+    0xa, 0xb4, 0xb, 0x7, 0x42, 0x40, 0xe0, 0x0,
+    0x78, 0x0, 0x3c, 0x0, 0xb8, 0x0, 0x2, 0xd0,
+    0x0, 0x3c, 0x30, 0xf, 0xe, 0x7, 0x80, 0xab,
+    0x40,
+
+    /* U+0034 "4" */
+    0x0, 0x38, 0x0, 0x2e, 0x0, 0x17, 0x80, 0x8,
+    0xe0, 0x8, 0x38, 0x5, 0xe, 0x2, 0x3, 0x81,
+    0xff, 0xfd, 0x0, 0x7c, 0x0, 0xe, 0x0, 0x3,
+    0x80,
+
+    /* U+0035 "5" */
+    0xf, 0xff, 0x3, 0xaa, 0x40, 0x40, 0x0, 0x50,
+    0x0, 0x1e, 0xe4, 0x0, 0xb, 0x40, 0x0, 0xf0,
+    0x0, 0x3c, 0x34, 0xf, 0xe, 0xb, 0x40, 0xab,
+    0x40,
+
+    /* U+0036 "6" */
+    0x0, 0x0, 0x0, 0x19, 0x0, 0x38, 0x0, 0x38,
+    0x0, 0x2c, 0x0, 0xf, 0x6e, 0x3, 0xc1, 0xe1,
+    0xe0, 0x3c, 0x38, 0xf, 0xf, 0x3, 0xc1, 0xc0,
+    0xd0, 0x1a, 0x90,
+
+    /* U+0037 "7" */
+    0x3f, 0xff, 0x2a, 0xaa, 0x0, 0x8, 0x0, 0xc,
+    0x0, 0x24, 0x0, 0x30, 0x0, 0xa0, 0x0, 0xd0,
+    0x2, 0xc0, 0x3, 0x80, 0xb, 0x0,
+
+    /* U+0038 "8" */
+    0xa, 0xa4, 0xb, 0x7, 0x43, 0xc0, 0xe0, 0xf0,
+    0x34, 0x1f, 0xa4, 0x1, 0xfd, 0x0, 0xc7, 0xd0,
+    0xe0, 0x3c, 0x34, 0xf, 0xe, 0x3, 0x80, 0xab,
+    0x40,
+
+    /* U+0039 "9" */
+    0xa, 0xa0, 0xf, 0x7, 0x3, 0x80, 0xe1, 0xe0,
+    0x3c, 0x78, 0xf, 0xf, 0x43, 0xc0, 0xba, 0xe0,
+    0x0, 0x74, 0x0, 0x38, 0x0, 0x38, 0x0, 0x64,
+    0x0, 0x0, 0x0,
+
     /* U+0041 "A" */
     0x0, 0x74, 0x0, 0x0, 0xb8, 0x0, 0x0, 0xbc,
     0x0, 0x1, 0x6d, 0x0, 0x2, 0x1e, 0x0, 0x2,
@@ -49,11 +107,6 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
     0x0, 0xf, 0x0, 0x0, 0x3c, 0x0, 0x0, 0xf0,
     0x0, 0x3, 0xd0, 0x0, 0x6f, 0x90, 0x0,
 
-    /* U+0061 "a" */
-    0x9, 0xb4, 0xf, 0xf, 0x2, 0x42, 0xc0, 0x5,
-    0xf0, 0x1c, 0x2c, 0xe, 0xb, 0x7, 0xc3, 0xd0,
-    0xbd, 0x3c,
-
     /* U+0065 "e" */
     0x6, 0xb8, 0x1c, 0xe, 0x3c, 0xf, 0x7e, 0xae,
     0x7c, 0x0, 0x3c, 0x0, 0x2f, 0x1, 0x7, 0xf4,
@@ -105,21 +158,29 @@ static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
 
 static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {
     {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
-    {.bitmap_index = 0, .adv_w = 60, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0},
     {.bitmap_index = 0, .adv_w = 96, .box_w = 5, .box_h = 15, .ofs_x = 1, .ofs_y = -3},
     {.bitmap_index = 19, .adv_w = 96, .box_w = 5, .box_h = 15, .ofs_x = 0, .ofs_y = -3},
-    {.bitmap_index = 38, .adv_w = 179, .box_w = 12, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
-    {.bitmap_index = 71, .adv_w = 168, .box_w = 10, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
-    {.bitmap_index = 99, .adv_w = 166, .box_w = 11, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
-    {.bitmap_index = 130, .adv_w = 140, .box_w = 9, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
-    {.bitmap_index = 148, .adv_w = 138, .box_w = 8, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
-    {.bitmap_index = 164, .adv_w = 242, .box_w = 15, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
-    {.bitmap_index = 194, .adv_w = 164, .box_w = 10, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
-    {.bitmap_index = 214, .adv_w = 160, .box_w = 10, .box_h = 12, .ofs_x = 0, .ofs_y = -4},
-    {.bitmap_index = 244, .adv_w = 119, .box_w = 8, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
-    {.bitmap_index = 260, .adv_w = 93, .box_w = 6, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
-    {.bitmap_index = 277, .adv_w = 161, .box_w = 10, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
-    {.bitmap_index = 300, .adv_w = 240, .box_w = 13, .box_h = 13, .ofs_x = 1, .ofs_y = -1}
+    {.bitmap_index = 38, .adv_w = 140, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 63, .adv_w = 140, .box_w = 7, .box_h = 11, .ofs_x = 1, .ofs_y = 0},
+    {.bitmap_index = 83, .adv_w = 140, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 108, .adv_w = 140, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 133, .adv_w = 140, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 158, .adv_w = 140, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 183, .adv_w = 140, .box_w = 9, .box_h = 12, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 210, .adv_w = 140, .box_w = 8, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 232, .adv_w = 140, .box_w = 9, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 257, .adv_w = 140, .box_w = 9, .box_h = 12, .ofs_x = 0, .ofs_y = -1},
+    {.bitmap_index = 284, .adv_w = 179, .box_w = 12, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 317, .adv_w = 168, .box_w = 10, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 345, .adv_w = 166, .box_w = 11, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 376, .adv_w = 138, .box_w = 8, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 392, .adv_w = 242, .box_w = 15, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 422, .adv_w = 164, .box_w = 10, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 442, .adv_w = 160, .box_w = 10, .box_h = 12, .ofs_x = 0, .ofs_y = -4},
+    {.bitmap_index = 472, .adv_w = 119, .box_w = 8, .box_h = 8, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 488, .adv_w = 93, .box_w = 6, .box_h = 11, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 505, .adv_w = 161, .box_w = 10, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
+    {.bitmap_index = 528, .adv_w = 240, .box_w = 13, .box_h = 13, .ofs_x = 1, .ofs_y = -1}
 };
 
 /*---------------------
@@ -127,16 +188,17 @@ static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {
  *--------------------*/
 
 static const uint16_t unicode_list_0[] = {
-    0x0, 0x8, 0x9, 0x21, 0x23, 0x34, 0x41, 0x45,
-    0x4d, 0x4e, 0x50, 0x52, 0x54, 0x55, 0x20e3
+    0x0, 0x1, 0x8, 0x9, 0xa, 0xb, 0xc, 0xd,
+    0xe, 0xf, 0x10, 0x11, 0x19, 0x1b, 0x2c, 0x3d,
+    0x45, 0x46, 0x48, 0x4a, 0x4c, 0x4d, 0x20db
 };
 
 /*Collect the unicode lists and glyph_id offsets*/
 static const lv_font_fmt_txt_cmap_t cmaps[] =
 {
     {
-        .range_start = 32, .range_length = 8420, .glyph_id_start = 1,
-        .unicode_list = unicode_list_0, .glyph_id_ofs_list = NULL, .list_length = 15, .type = LV_FONT_FMT_TXT_CMAP_SPARSE_TINY
+        .range_start = 40, .range_length = 8412, .glyph_id_start = 1,
+        .unicode_list = unicode_list_0, .glyph_id_ofs_list = NULL, .list_length = 23, .type = LV_FONT_FMT_TXT_CMAP_SPARSE_TINY
     }
 };
 
@@ -148,37 +210,36 @@ static const lv_font_fmt_txt_cmap_t cmaps[] =
 /*Map glyph_ids to kern left classes*/
 static const uint8_t kern_left_class_mapping[] =
 {
-    0, 0, 1, 2, 3, 4, 5, 6,
-    7, 8, 8, 9, 10, 11, 12, 0
+    0, 1, 2, 0, 0, 0, 0, 0,
+    0, 0, 0, 0, 0, 3, 4, 5,
+    6, 7, 7, 8, 9, 10, 11, 0
 };
 
 /*Map glyph_ids to kern right classes*/
 static const uint8_t kern_right_class_mapping[] =
 {
-    0, 0, 1, 2, 3, 4, 5, 6,
-    7, 8, 8, 9, 8, 10, 11, 0
+    0, 1, 2, 0, 0, 0, 0, 0,
+    0, 0, 0, 0, 0, 3, 4, 5,
+    6, 7, 7, 8, 7, 9, 10, 0
 };
 
 /*Kern values between classes*/
 static const int8_t kern_class_values[] =
 {
-    -17, 3, -7, -5, 0, -3, -7, -3,
-    0, -3, -6, -2, -17, -1, 0, -5,
-    0, 0, 0, 0, 0, 0, 0, -7,
-    1, -7, -18, -1, -5, 0, -7, -6,
-    -8, 0, 2, -1, -1, 0, 0, 0,
-    0, -3, 0, -4, -5, 0, -19, -3,
-    1, -14, -19, -9, -16, -2, -12, 0,
-    -3, 1, -4, -16, 0, 0, 0, -5,
-    0, -2, 0, -5, -5, 0, -14, -1,
-    0, 0, -2, 0, 0, 0, -6, 0,
-    -2, -17, -1, 0, 0, -4, -1, -1,
-    0, -6, -12, 0, -16, -1, 1, 0,
-    -2, -1, -1, 0, -8, -17, 0, -2,
-    -5, -4, 0, 0, 2, 0, 0, 0,
-    2, 0, -3, 0, 0, 0, -1, 0,
-    -1, 0, -2, 0, -2, -13, 0, -1,
-    0, -2, 0, 0
+    -17, 3, -7, -5, 0, -7, -3, 0,
+    -3, -6, -2, -17, -1, 0, -5, 0,
+    0, 0, 0, 0, 0, -7, 1, -7,
+    -18, -5, 0, -7, -6, -8, 0, 2,
+    -1, -1, 0, 0, 0, -3, 0, -4,
+    -5, 0, -19, -3, 1, -19, -9, -16,
+    -2, -12, 0, -5, -5, 0, -14, 0,
+    0, -2, 0, 0, 0, -6, 0, -2,
+    -17, 0, 0, -4, -1, -1, 0, -6,
+    -12, 0, -16, 1, 0, -2, -1, -1,
+    0, -8, -17, 0, -2, -4, 0, 0,
+    2, 0, 0, 0, 2, 0, -3, 0,
+    0, -1, 0, -1, 0, -2, 0, -2,
+    -13, -1, 0, -2, 0, 0
 };
 
 
@@ -188,15 +249,15 @@ static const lv_font_fmt_txt_kern_classes_t kern_classes =
     .class_pair_values   = kern_class_values,
     .left_class_mapping  = kern_left_class_mapping,
     .right_class_mapping = kern_right_class_mapping,
-    .left_class_cnt      = 12,
-    .right_class_cnt     = 11,
+    .left_class_cnt      = 11,
+    .right_class_cnt     = 10,
 };
 
 /*--------------------
  *  ALL CUSTOM DATA
  *--------------------*/
 
-#if LV_VERSION_CHECK(8, 0, 0)
+#if LVGL_VERSION_MAJOR >= 8
 /*Store all the custom data of the font*/
 static  lv_font_fmt_txt_glyph_cache_t cache;
 static const lv_font_fmt_txt_dsc_t font_dsc = {
@@ -212,7 +273,7 @@ static lv_font_fmt_txt_dsc_t font_dsc = {
     .bpp = 2,
     .kern_classes = 1,
     .bitmap_format = 0,
-#if LV_VERSION_CHECK(8, 0, 0)
+#if LVGL_VERSION_MAJOR >= 8
     .cache = &cache
 #endif
 };
@@ -223,7 +284,7 @@ static lv_font_fmt_txt_dsc_t font_dsc = {
  *----------------*/
 
 /*Initialize a public general font descriptor*/
-#if LV_VERSION_CHECK(8, 0, 0)
+#if LVGL_VERSION_MAJOR >= 8
 const lv_font_t font_tw_15 = {
 #else
 lv_font_t font_tw_15 = {
@@ -239,7 +300,9 @@ lv_font_t font_tw_15 = {
     .underline_position = -2,
     .underline_thickness = 1,
 #endif
-    .dsc = &font_dsc           /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
+    .dsc = &font_dsc,          /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
+    .fallback = NULL,
+    .user_data = NULL
 };
 
 
diff --git a/components/utilities/ui/ui_setting.c b/components/utilities/ui/ui_setting.c
index d28f512..914c197 100644
--- a/components/utilities/ui/ui_setting.c
+++ b/components/utilities/ui/ui_setting.c
@@ -23,7 +23,37 @@
 #include "mod_trans.h"
 
 
+#if defined(USING_SECOND_TEMPER)
 
+const char* label_list[PARAM_ITEM_NUMS_END] = {
+/***********常用*******************/
+    "电流设置(mA)",
+	"一级温度设置(℃)",
+	"二级温度设置(℃)",
+	"扫描频率(HZ)",
+	"扫描幅值(V)",
+	"扫描偏置(V)",
+	"调制相位",
+	"调制频率(HZ)",
+/***********开发者*******************/
+	"电流告警值(mA)",
+	"温度告警值(℃)",	
+	"扫描电流(mA)",
+	"自动锁峰尖识别值",
+	"电流工作点(mA)",
+	"一级温度工作点(℃)",
+	"二级温度工作点(℃)",
+	"调制频率工作点(HZ)",	
+	"调制相位工作点",
+};
+
+const char* view_icons[VIEW_SAMPLE_NUMS] = {
+	MY_ICON_CURRENT,
+	MY_ICON_TEMPER,
+	MY_ICON_TEMPER,
+};
+
+#else
 const char* label_list[PARAM_ITEM_NUMS_END] = {
     "电流设置(mA)",
 	"温度设置(℃)",
@@ -43,6 +73,14 @@ const char* label_list[PARAM_ITEM_NUMS_END] = {
 	"调制相位工作点",
 };
 
+const char* view_icons[VIEW_SAMPLE_NUMS] = {
+	MY_ICON_CURRENT,
+	MY_ICON_TEMPER,
+	MY_ICON_DDS,
+};
+
+#endif
+
 const char* Switch_list[RELAY_NUMS] = {
 	"开关1",
 	"112",
@@ -58,11 +96,7 @@ const char *btn_names[2] = {
 	MY_ICON_AUTO_PEAK,
 };
 
-const char* view_icons[3] = {
-	MY_ICON_CURRENT,
-	MY_ICON_TEMPER,
-	MY_ICON_DDS,
-};
+
 
 struct _ui_Setting _settingUI;
 enc_flewChk_t enc_Chker;
@@ -86,13 +120,30 @@ void spinbox_judge_val(uint8_t index, bool enable)
 	switch(index)
 	{
 		case Item_Current:
-		case Item_Temper:
+		case Item_Temper_Lv1:
 			limitVal = lv_spinbox_get_value(_settingUI._mods[index + ALARM_OFFSET]->_mObj);
 			if(nowVal > limitVal)
 			{
 				ret = -1;
 			}	
 		break;
+#if defined(USING_SECOND_TEMPER)
+		//二级温控与一级温控共用1个告警值
+		case Item_Temper_Lv2:
+			limitVal = lv_spinbox_get_value(_settingUI._mods[index + ALARM_OFFSET - 1]->_mObj);
+			if(nowVal > limitVal)
+			{
+				ret = -1;
+			}
+#else
+		case Item_PztBias:
+			limitVal = lv_spinbox_get_value(_settingUI._mods[index - 1]->_mObj);
+			if((nowVal + limitVal) > PZT_AMP_MAX)
+			{
+				ret = -1;						
+			}	
+#endif	
+		break;			
 		default:				
 		break;
 	}
@@ -274,7 +325,43 @@ tab_module_t *subTab_create(lv_obj_t * parent, uint8_t index, uint8_t tabType, v
     if (t_tabBox != NULL)
     {
 		t_tabBox->_attr.itemIndex = index;
-		t_tabBox->_attr.range_min = 0;			
+		t_tabBox->_attr.range_min = 0;	
+
+#if defined(USING_SECOND_TEMPER)
+		//频率设置项
+		if(index == 3)
+		{
+			t_tabBox->_attr.bHasDot = false;
+			t_tabBox->_attr.range_min = 1;
+			t_tabBox->_attr.range_max = 50;
+		}		
+		else if(index == 7 || index == 15)
+		{
+			t_tabBox->_attr.bHasDot = false;
+			t_tabBox->_attr.range_min = 1;
+			t_tabBox->_attr.range_max = 6000000;
+		//PZT扫描偏置
+		}else if(index == 5)
+		{
+			t_tabBox->_attr.bHasDot = true;	
+			t_tabBox->_attr.range_max = 100000;
+		}
+		//pzt扫描幅值		
+		else if(index == 4)
+		{
+			t_tabBox->_attr.bHasDot = true;	
+			t_tabBox->_attr.range_max = 100000;
+		}
+		//dds相位
+		else if(index == 6 || index == 16)
+		{
+			t_tabBox->_attr.bHasDot = false;
+			t_tabBox->_attr.range_max = 360;
+		}else{
+			t_tabBox->_attr.bHasDot = true;
+			t_tabBox->_attr.range_max = 999999;
+		}
+#else		
 		//频率设置项
 		if(index == 2 || index == 6 || index == 13)
 		{
@@ -301,7 +388,8 @@ tab_module_t *subTab_create(lv_obj_t * parent, uint8_t index, uint8_t tabType, v
 		}else{
 			t_tabBox->_attr.bHasDot = true;
 			t_tabBox->_attr.range_max = 999999;
-		}			
+		}	
+#endif
         t_tabBox->_root = lv_obj_create(parent);
 		if(tabType == ENUM_TYPE_TXT)
 		{
@@ -757,12 +845,20 @@ void viewGrp_MainCreate(lv_obj_t* parent)
 		LV_FLEX_ALIGN_CENTER
 	);
 	lv_obj_set_style_pad_row(parent, 5, LV_PART_MAIN); 	//设置各item之间的行间距
-	const char* TextList[3] =
+	const char* TextList[VIEW_SAMPLE_NUMS] =	
+#if defined(USING_SECOND_TEMPER)
+	{
+		"电流(mA)",
+		"一级温度(℃)",
+		"二级温度(℃)",		
+	};
+#else	
 	{
 		"电流(mA)",
 		"温度(℃)",
 		"积分",
 	};
+#endif
 	//监控按钮		
 	lv_obj_t *monitor_cont = lv_obj_create(parent);
 	lv_obj_remove_style_all(monitor_cont);
diff --git a/components/utilities/ui/ui_summary.c b/components/utilities/ui/ui_summary.c
index 33d1c87..139058c 100644
--- a/components/utilities/ui/ui_summary.c
+++ b/components/utilities/ui/ui_summary.c
@@ -12,17 +12,33 @@
 /*组件高度*/
 #define MODULE_HEIGHT       (TOP_HEIGHT - MTM_GAP * 2)
 
+#define SMALL_MODULE_WIDTH  (TOP_WITH - MTM_GAP * 4) / 3
 
+#if defined(USING_SECOND_TEMPER)
+const char* list2_icons[MAIN_SAMPLE_NUMS] = {
+	MY_ICON_CURRENT,
+	MY_ICON_TEMPER,
+	MY_ICON_TEMPER,
+};
+
+const char* list1_label[MAIN_SAMPLE_NUMS] = 
+{
+	"Current(mA)",
+	"Temper1(℃)",
+	"Temper2(℃)",	
+};
+#else
 
-const char* list2_icons[2] = {
+const char* list2_icons[MAIN_SAMPLE_NUMS] = {
 	MY_SYMBOL_FREQ,
 	MY_SYMBOL_TEMPER,
 };
 
-const char* list1_label[2] = {
+const char* list1_label[MAIN_SAMPLE_NUMS] = {
 	"Current (mA)",
 	"Temperature (℃)",
 };
+#endif
 
 struct _ui_info ui;
 
@@ -45,10 +61,34 @@ void lv_obj_set_opa_scale(lv_obj_t* obj, int16_t opa)
 }
 
 
+
+#if defined(USING_SECOND_TEMPER)
 void viewGrp_Update(viewInfo_t *info, uint8_t index)
 {
 	uint32_t tmp = 0;
-	if(index <= Item_Temper)
+	int32_t warnVal = 0;
+	tmp = ui_sample[DATA_OFFSET + index].recvDate;
+	if(tmp & 0xF0000000) //负数
+		return;
+	//更新进度条
+	lv_bar_set_value(info->Bar_Main, tmp / 1000, LV_ANIM_ON);
+	if(index == Item_Temper_Lv2)
+		warnVal = lv_spinbox_get_value(_settingUI._mods[index + ALARM_OFFSET - 1]->_mObj);
+	else
+		warnVal = lv_spinbox_get_value(_settingUI._mods[index + ALARM_OFFSET]->_mObj);		
+	//采样值正常或无告警采样项正常显示数值
+	if(tmp < warnVal)
+		lv_label_set_text_fmt(info->Bar_icon, "%.2f", ((float)tmp / 1000));
+	else
+		lv_label_set_text(info->Bar_icon, LV_SYMBOL_WARNING);
+}
+
+#else
+
+void viewGrp_Update(viewInfo_t *info, uint8_t index)
+{
+	uint32_t tmp = 0;
+	if(index <= Item_Temper_Lv1)
 		tmp = ui_sample[DATA_OFFSET + index].recvDate;
 	else
 		tmp = ui_sample[1].recvDate;
@@ -57,17 +97,22 @@ void viewGrp_Update(viewInfo_t *info, uint8_t index)
 	//更新进度条
 	lv_bar_set_value(info->Bar_Main, tmp / 1000, LV_ANIM_ON);
 	int32_t warnVal = lv_spinbox_get_value(_settingUI._mods[index + ALARM_OFFSET]->_mObj);
-	if(tmp < warnVal || index > Item_Temper)
+	if(tmp < warnVal || index > Item_Temper_Lv1)
 		lv_label_set_text_fmt(info->Bar_icon, "%.2f", ((float)tmp / 1000));
 	else
 		lv_label_set_text(info->Bar_icon, LV_SYMBOL_WARNING);
 }
+#endif
+
 
 void sample_update(uint8_t lockState)
 {
 	module_set_usage_value(ui.topInfo.I_module);
-	module_set_usage_value(ui.topInfo.T_module);
-	
+		module_set_usage_value(ui.topInfo.T1_module);
+#if defined(USING_SECOND_TEMPER)
+		module_set_usage_value(ui.topInfo.T2_module);
+#endif
+
 	lv_label_set_text_fmt(
 		ui.bottomInfo.labelInfoGrp[0].lableValue,
 		"%d",
@@ -213,7 +258,7 @@ void BottomInfo_Create(lv_obj_t* parent)
 		LV_FLEX_ALIGN_CENTER
 	);
 	ui.bottomInfo.cont = cont;
-	const char* unitText[6] =
+	const char* unitText[OTHER_SAMPLE_NUMS] =
 	{
 		"Addr",						//地址
 		"Integral",					//积分
@@ -284,29 +329,38 @@ static void chart_draw_event_cb(lv_event_t* event)
 
 
 
-static void module_style_init(module_t* module, uint8_t icon_index)
+static void module_style_init(module_t* module, uint8_t icon_index, lv_coord_t w, lv_coord_t h)
 {
     lv_obj_remove_style_all(module->obj_root);
     lv_obj_set_style_radius(module->obj_root, 6, LV_PART_MAIN);
     lv_obj_set_style_bg_opa(module->obj_root, LV_OPA_50, LV_PART_MAIN);
     lv_obj_set_style_bg_color(module->obj_root, lv_color_hex(0x393d45), LV_PART_MAIN);
-    lv_obj_set_size(module->obj_root, MODULE_WIDTH, MODULE_HEIGHT);
+    lv_obj_set_size(module->obj_root, w, h);
     lv_obj_clear_flag(module->obj_root, LV_OBJ_FLAG_SCROLLABLE);
 
     /*Icon*/
 	lv_obj_remove_style_all(module->iconlabel);
 	lv_obj_set_style_text_color(module->iconlabel, lv_color_hex(0xff931e), LV_PART_MAIN);
+#if defined(USING_SECOND_TEMPER)
+	lv_obj_set_style_text_font(module->iconlabel, &font_symbol_25, LV_PART_MAIN);
+#else	
 	lv_obj_set_style_text_font(module->iconlabel, &font_symbol_32, LV_PART_MAIN);
+#endif
 	lv_label_set_text(module->iconlabel, list2_icons[icon_index]);
-	lv_obj_align(module->iconlabel, LV_ALIGN_TOP_LEFT, 15, 10);
+	
 
 	lv_obj_t *icon_label = lv_label_create(module->obj_root);
 	lv_obj_remove_style_all(icon_label);
 	lv_obj_set_style_text_color(icon_label, lv_color_hex(0xff931e), LV_PART_MAIN);
 	lv_obj_set_style_text_font(icon_label, &font_tw_15, LV_PART_MAIN);
 	lv_label_set_text(icon_label, list1_label[icon_index]);
+#if defined(USING_SECOND_TEMPER)
+	lv_obj_align(module->iconlabel, LV_ALIGN_TOP_LEFT, 6, 10);
+	lv_obj_align_to(icon_label, module->iconlabel, LV_ALIGN_OUT_RIGHT_MID, 6, 0);
+#else	
+	lv_obj_align(module->iconlabel, LV_ALIGN_TOP_LEFT, 15, 10);
 	lv_obj_align_to(icon_label, module->iconlabel, LV_ALIGN_OUT_RIGHT_MID, 30, -8);
-   
+#endif   
     /*Utilize Label*/
     lv_obj_remove_style_all(module->usage_label);
     lv_obj_set_style_text_color(module->usage_label, lv_color_white(), LV_PART_MAIN);
@@ -321,7 +375,7 @@ static void module_style_init(module_t* module, uint8_t icon_index)
     lv_obj_set_style_pad_all(module->usage_chart, 0, LV_PART_MAIN);
     lv_obj_set_style_size(module->usage_chart, 0, LV_PART_INDICATOR);     //在折线上不显示点
     lv_obj_set_style_opa(module->usage_chart, LV_OPA_80, LV_PART_ITEMS);
-    lv_obj_set_size(module->usage_chart, MODULE_WIDTH, LV_PCT(80));
+    lv_obj_set_size(module->usage_chart, w, LV_PCT(80));
     lv_obj_align(module->usage_chart, LV_ALIGN_BOTTOM_LEFT, 0, -5);
     lv_chart_set_type(module->usage_chart, LV_CHART_TYPE_LINE);
     lv_chart_set_range(module->usage_chart, LV_CHART_AXIS_PRIMARY_Y, 0, 100);
@@ -332,7 +386,7 @@ static void module_style_init(module_t* module, uint8_t icon_index)
 }
 
 
-static module_t* module_create(lv_obj_t* parent, uint8_t icon_index)
+static module_t* module_create(lv_obj_t* parent, uint8_t icon_index, lv_coord_t w, lv_coord_t h)
 {
     module_t* _module = (module_t*)rt_malloc(sizeof(module_t));
     if (_module != NULL)
@@ -342,7 +396,7 @@ static module_t* module_create(lv_obj_t* parent, uint8_t icon_index)
         _module->usage_label = lv_label_create(_module->obj_root);
         _module->usage_chart = lv_chart_create(_module->obj_root);
         _module->usage_series = lv_chart_add_series(_module->usage_chart, lv_color_hex(0x6a98fa)/*线条颜色*/, LV_CHART_AXIS_PRIMARY_Y);
-		module_style_init(_module, icon_index);
+		module_style_init(_module, icon_index, w, h);
 		//采样值初始化
 		_module->mod_sample = &ui_sample[DATA_OFFSET + icon_index];
     }
@@ -352,7 +406,10 @@ static module_t* module_create(lv_obj_t* parent, uint8_t icon_index)
 static void module_free(void)
 {
 	rt_free(ui.topInfo.I_module);
-	rt_free(ui.topInfo.T_module);	
+	rt_free(ui.topInfo.T1_module);	
+#if defined(USING_SECOND_TEMPER)
+	rt_free(ui.topInfo.T2_module);	
+#endif	
 }
 
 
@@ -371,8 +428,14 @@ void TopInfo_Create(lv_obj_t* parent)
         LV_FLEX_ALIGN_CENTER
     );
 	ui.topInfo.cont = cont;
-    ui.topInfo.I_module = module_create(cont, 0);
-    ui.topInfo.T_module = module_create(cont, 1);
+#if defined(USING_SECOND_TEMPER)	
+    ui.topInfo.I_module = module_create(cont, 0, SMALL_MODULE_WIDTH, MODULE_HEIGHT);
+    ui.topInfo.T1_module = module_create(cont, 1, SMALL_MODULE_WIDTH, MODULE_HEIGHT);
+    ui.topInfo.T2_module = module_create(cont, 2, SMALL_MODULE_WIDTH, MODULE_HEIGHT);
+#else
+    ui.topInfo.I_module = module_create(cont, 0, MODULE_WIDTH, MODULE_HEIGHT);	
+    ui.topInfo.T1_module = module_create(cont, 1, MODULE_WIDTH, MODULE_HEIGHT);
+#endif	
 }
 
 
diff --git a/components/utilities/ui/ui_utils.h b/components/utilities/ui/ui_utils.h
index e7865ea..db19d16 100644
--- a/components/utilities/ui/ui_utils.h
+++ b/components/utilities/ui/ui_utils.h
@@ -87,12 +87,44 @@
 
 
 //LD参数数量
+#if defined(USING_SECOND_TEMPER)
+
+#define DEVELOP_ITEM_NUMS_END 			8     //常用参数数量
+#define PARAM_ITEM_NUMS_END				17	  //所有参数数量
+#define MAIN_SAMPLE_NUMS				3
+#define ALARM_OFFSET					8	  //告警值与设置值的序号偏移
+
+enum E_LD_ItemIndex
+{
+	Item_Current   = 0,
+	Item_Temper_Lv1	   = 1,
+	Item_Temper_Lv2	   = 2,
+	Item_PztAmp	   = 4,
+	Item_PztBias   = 5,
+};
+
+#else
+
 #define DEVELOP_ITEM_NUMS_END 			7     //常用参数数量
-#define PARAM_ITEM_NUMS_END				15	  //其他参数数量
-#define RELAY_NUMS 						7	  //开关继电器数量
+#define PARAM_ITEM_NUMS_END				15	  //所有参数数量	
+#define MAIN_SAMPLE_NUMS				2
+#define ALARM_OFFSET					7	  //告警值与设置值的序号偏移
+
+
+enum E_LD_ItemIndex
+{
+	Item_Current   = 0,
+	Item_Temper_Lv1	= 1,
+	Item_PztAmp	   = 3,
+	Item_PztBias   = 4,
+};	
 
+#endif
+
+#define VIEW_SAMPLE_NUMS				3
+#define OTHER_SAMPLE_NUMS				6
+#define RELAY_NUMS 						7	  //开关继电器数量
 #define DATA_OFFSET						6	  //采集(副)与采集（主）数组偏移
-#define ALARM_OFFSET					7	  //
 #define IDLE_OVERFLOW_TIME 				4	  //4X50 = 200ms空闲发送数据
 
 #define RANGE_MIN	45			  //弧形进度条初始角
@@ -101,6 +133,10 @@
 
 #define PZT_AMP_MAX						14000 // 14V
 
+
+
+
+
 enum {
 	ENUM_TYPE_SW = 0,
 	ENUM_TYPE_TXT,
@@ -156,13 +192,7 @@ enum E_DialogType
 	Dialog_Type_None			= 10,	
 };
 
-enum E_LD_ItemIndex
-{
-	Item_Current   = 0,
-	Item_Temper	   = 1,
-	Item_PztAmp	   = 3,
-	Item_PztBias   = 4,
-};
+
 
 //TA采样数据序列
 enum E_TA_ItemIndex
@@ -269,13 +299,17 @@ struct _ui_info
 	struct
 	{
 		lv_obj_t* cont;
-		module_t* I_module;
-		module_t* T_module;
+		module_t* I_module;		
+		module_t* T1_module;
+#if defined(USING_SECOND_TEMPER)		
+		module_t* T2_module;
+#endif
+
 	}topInfo;
 	struct
 	{
 		lv_obj_t* cont;
-		SubInfo_t labelInfoGrp[6];
+		SubInfo_t labelInfoGrp[OTHER_SAMPLE_NUMS];
 		bool bFirstEntryLock;
 	} bottomInfo;
 	struct
@@ -394,6 +428,7 @@ LV_FONT_DECLARE(font_bahnschrift_35)
 //设置界面字体
 LV_FONT_DECLARE(font_symbol_20)
 //主界面字体
+LV_FONT_DECLARE(font_symbol_25)
 LV_FONT_DECLARE(font_symbol_32)
 //汉字
 LV_FONT_DECLARE(font_ch_16)
